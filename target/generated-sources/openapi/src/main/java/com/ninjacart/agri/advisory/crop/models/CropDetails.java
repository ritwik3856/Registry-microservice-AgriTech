package com.ninjacart.agri.advisory.crop.models;

import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.time.OffsetDateTime;
import java.time.LocalDateTime;
import org.springframework.format.annotation.DateTimeFormat;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;

import org.springframework.hateoas.RepresentationModel;

import java.util.*;
import javax.annotation.Generated;

/**
 * CropDetails
 */
@lombok.AllArgsConstructor
@lombok.NoArgsConstructor
@lombok.Builder

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-02-21T18:37:47.953428+05:30[Asia/Kolkata]")
@jakarta.persistence.Entity
@jakarta.persistence.Table(
    name = "crop_details"
  )
public class CropDetails extends RepresentationModel<CropDetails>  {

  @jakarta.persistence.Id
@jakarta.persistence.GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
  private Integer id;

  private Integer createdBy;

  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private LocalDateTime createdAt;

  private Integer updatedBy;

  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private LocalDateTime updatedAt;

  private String createdByToolId;

  private String updatedByToolId;

  @jakarta.persistence.OneToOne(cascade = jakarta.persistence.CascadeType.ALL)
@jakarta.persistence.JoinColumn(name="unspsc")
@com.ninjacart.agri.advisory.crop.annotation.UDI
  private com.ninjacart.agri.advisory.refdata.models.UnspscCode unspsc;

  @jakarta.persistence.OneToOne(cascade = jakarta.persistence.CascadeType.ALL)
@jakarta.persistence.JoinColumn(name="eppocode")
@com.ninjacart.agri.advisory.crop.annotation.UDI
  private com.ninjacart.agri.advisory.refdata.models.EppoCode eppocode;

  private String realmId;

  private Integer cropId;

  private Integer langId;

  private Integer authorId;

  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private LocalDateTime time;

  private String name;

  private String description;

  private String diseases;

  private String farmingRegions;

  private String fertilizers;

  private String income;

  private String inputCost;

  private String irrigationMethods;

  private String machinesRequired;

  private String marketDemand;

  private String revenue;

  private String seedProcurement;

  private String seedQuantity;

  private String seedTypes;

  private String soilPreparation;

  private String sowingMethod;

  private String weedManagement;

  private String nutritionalDetails;

  private Boolean published;

  private Integer versionId;

  private Integer parentId;

  private Short isApproved;

  private String reviewerRemarks;

  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private LocalDateTime lastUpdatedAt;

  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private LocalDateTime approvedAt;

  private Integer approvedBy;

  public CropDetails id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Autogenerated primary key
   * @return id
  */
  
  @JsonProperty("id")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public CropDetails createdBy(Integer createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
  */
  
  @JsonProperty("createdBy")
  public Integer getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(Integer createdBy) {
    this.createdBy = createdBy;
  }

  public CropDetails createdAt(LocalDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
  */
  @Valid 
  @JsonProperty("createdAt")
  public LocalDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(LocalDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public CropDetails updatedBy(Integer updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

  /**
   * Get updatedBy
   * @return updatedBy
  */
  
  @JsonProperty("updatedBy")
  public Integer getUpdatedBy() {
    return updatedBy;
  }

  public void setUpdatedBy(Integer updatedBy) {
    this.updatedBy = updatedBy;
  }

  public CropDetails updatedAt(LocalDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
  */
  @Valid 
  @JsonProperty("updatedAt")
  public LocalDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(LocalDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public CropDetails createdByToolId(String createdByToolId) {
    this.createdByToolId = createdByToolId;
    return this;
  }

  /**
   * Get createdByToolId
   * @return createdByToolId
  */
  
  @JsonProperty("createdByToolId")
  public String getCreatedByToolId() {
    return createdByToolId;
  }

  public void setCreatedByToolId(String createdByToolId) {
    this.createdByToolId = createdByToolId;
  }

  public CropDetails updatedByToolId(String updatedByToolId) {
    this.updatedByToolId = updatedByToolId;
    return this;
  }

  /**
   * Get updatedByToolId
   * @return updatedByToolId
  */
  
  @JsonProperty("updatedByToolId")
  public String getUpdatedByToolId() {
    return updatedByToolId;
  }

  public void setUpdatedByToolId(String updatedByToolId) {
    this.updatedByToolId = updatedByToolId;
  }

  public CropDetails unspsc(com.ninjacart.agri.advisory.refdata.models.UnspscCode unspsc) {
    this.unspsc = unspsc;
    return this;
  }

  /**
   * Get unspsc
   * @return unspsc
  */
  @Valid 
  @JsonProperty("unspsc")
  public com.ninjacart.agri.advisory.refdata.models.UnspscCode getUnspsc() {
    return unspsc;
  }

  public void setUnspsc(com.ninjacart.agri.advisory.refdata.models.UnspscCode unspsc) {
    this.unspsc = unspsc;
  }

  public CropDetails eppocode(com.ninjacart.agri.advisory.refdata.models.EppoCode eppocode) {
    this.eppocode = eppocode;
    return this;
  }

  /**
   * Get eppocode
   * @return eppocode
  */
  @Valid 
  @JsonProperty("eppocode")
  public com.ninjacart.agri.advisory.refdata.models.EppoCode getEppocode() {
    return eppocode;
  }

  public void setEppocode(com.ninjacart.agri.advisory.refdata.models.EppoCode eppocode) {
    this.eppocode = eppocode;
  }

  public CropDetails realmId(String realmId) {
    this.realmId = realmId;
    return this;
  }

  /**
   * Get realmId
   * @return realmId
  */
  
  @JsonProperty("realmId")
  public String getRealmId() {
    return realmId;
  }

  public void setRealmId(String realmId) {
    this.realmId = realmId;
  }

  public CropDetails cropId(Integer cropId) {
    this.cropId = cropId;
    return this;
  }

  /**
   * Get cropId
   * @return cropId
  */
  
  @JsonProperty("cropId")
  public Integer getCropId() {
    return cropId;
  }

  public void setCropId(Integer cropId) {
    this.cropId = cropId;
  }

  public CropDetails langId(Integer langId) {
    this.langId = langId;
    return this;
  }

  /**
   * Get langId
   * @return langId
  */
  
  @JsonProperty("langId")
  public Integer getLangId() {
    return langId;
  }

  public void setLangId(Integer langId) {
    this.langId = langId;
  }

  public CropDetails authorId(Integer authorId) {
    this.authorId = authorId;
    return this;
  }

  /**
   * Get authorId
   * @return authorId
  */
  
  @JsonProperty("authorId")
  public Integer getAuthorId() {
    return authorId;
  }

  public void setAuthorId(Integer authorId) {
    this.authorId = authorId;
  }

  public CropDetails time(LocalDateTime time) {
    this.time = time;
    return this;
  }

  /**
   * Get time
   * @return time
  */
  @Valid 
  @JsonProperty("time")
  public LocalDateTime getTime() {
    return time;
  }

  public void setTime(LocalDateTime time) {
    this.time = time;
  }

  public CropDetails name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
  */
  @NotNull 
  @JsonProperty("name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CropDetails description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
  */
  
  @JsonProperty("description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CropDetails diseases(String diseases) {
    this.diseases = diseases;
    return this;
  }

  /**
   * Get diseases
   * @return diseases
  */
  
  @JsonProperty("diseases")
  public String getDiseases() {
    return diseases;
  }

  public void setDiseases(String diseases) {
    this.diseases = diseases;
  }

  public CropDetails farmingRegions(String farmingRegions) {
    this.farmingRegions = farmingRegions;
    return this;
  }

  /**
   * Get farmingRegions
   * @return farmingRegions
  */
  
  @JsonProperty("farmingRegions")
  public String getFarmingRegions() {
    return farmingRegions;
  }

  public void setFarmingRegions(String farmingRegions) {
    this.farmingRegions = farmingRegions;
  }

  public CropDetails fertilizers(String fertilizers) {
    this.fertilizers = fertilizers;
    return this;
  }

  /**
   * Get fertilizers
   * @return fertilizers
  */
  
  @JsonProperty("fertilizers")
  public String getFertilizers() {
    return fertilizers;
  }

  public void setFertilizers(String fertilizers) {
    this.fertilizers = fertilizers;
  }

  public CropDetails income(String income) {
    this.income = income;
    return this;
  }

  /**
   * Get income
   * @return income
  */
  @NotNull 
  @JsonProperty("income")
  public String getIncome() {
    return income;
  }

  public void setIncome(String income) {
    this.income = income;
  }

  public CropDetails inputCost(String inputCost) {
    this.inputCost = inputCost;
    return this;
  }

  /**
   * Get inputCost
   * @return inputCost
  */
  
  @JsonProperty("inputCost")
  public String getInputCost() {
    return inputCost;
  }

  public void setInputCost(String inputCost) {
    this.inputCost = inputCost;
  }

  public CropDetails irrigationMethods(String irrigationMethods) {
    this.irrigationMethods = irrigationMethods;
    return this;
  }

  /**
   * Get irrigationMethods
   * @return irrigationMethods
  */
  
  @JsonProperty("irrigationMethods")
  public String getIrrigationMethods() {
    return irrigationMethods;
  }

  public void setIrrigationMethods(String irrigationMethods) {
    this.irrigationMethods = irrigationMethods;
  }

  public CropDetails machinesRequired(String machinesRequired) {
    this.machinesRequired = machinesRequired;
    return this;
  }

  /**
   * Get machinesRequired
   * @return machinesRequired
  */
  
  @JsonProperty("machinesRequired")
  public String getMachinesRequired() {
    return machinesRequired;
  }

  public void setMachinesRequired(String machinesRequired) {
    this.machinesRequired = machinesRequired;
  }

  public CropDetails marketDemand(String marketDemand) {
    this.marketDemand = marketDemand;
    return this;
  }

  /**
   * Get marketDemand
   * @return marketDemand
  */
  
  @JsonProperty("marketDemand")
  public String getMarketDemand() {
    return marketDemand;
  }

  public void setMarketDemand(String marketDemand) {
    this.marketDemand = marketDemand;
  }

  public CropDetails revenue(String revenue) {
    this.revenue = revenue;
    return this;
  }

  /**
   * Get revenue
   * @return revenue
  */
  
  @JsonProperty("revenue")
  public String getRevenue() {
    return revenue;
  }

  public void setRevenue(String revenue) {
    this.revenue = revenue;
  }

  public CropDetails seedProcurement(String seedProcurement) {
    this.seedProcurement = seedProcurement;
    return this;
  }

  /**
   * Get seedProcurement
   * @return seedProcurement
  */
  
  @JsonProperty("seedProcurement")
  public String getSeedProcurement() {
    return seedProcurement;
  }

  public void setSeedProcurement(String seedProcurement) {
    this.seedProcurement = seedProcurement;
  }

  public CropDetails seedQuantity(String seedQuantity) {
    this.seedQuantity = seedQuantity;
    return this;
  }

  /**
   * Get seedQuantity
   * @return seedQuantity
  */
  
  @JsonProperty("seedQuantity")
  public String getSeedQuantity() {
    return seedQuantity;
  }

  public void setSeedQuantity(String seedQuantity) {
    this.seedQuantity = seedQuantity;
  }

  public CropDetails seedTypes(String seedTypes) {
    this.seedTypes = seedTypes;
    return this;
  }

  /**
   * Get seedTypes
   * @return seedTypes
  */
  
  @JsonProperty("seedTypes")
  public String getSeedTypes() {
    return seedTypes;
  }

  public void setSeedTypes(String seedTypes) {
    this.seedTypes = seedTypes;
  }

  public CropDetails soilPreparation(String soilPreparation) {
    this.soilPreparation = soilPreparation;
    return this;
  }

  /**
   * Get soilPreparation
   * @return soilPreparation
  */
  
  @JsonProperty("soilPreparation")
  public String getSoilPreparation() {
    return soilPreparation;
  }

  public void setSoilPreparation(String soilPreparation) {
    this.soilPreparation = soilPreparation;
  }

  public CropDetails sowingMethod(String sowingMethod) {
    this.sowingMethod = sowingMethod;
    return this;
  }

  /**
   * Get sowingMethod
   * @return sowingMethod
  */
  
  @JsonProperty("sowingMethod")
  public String getSowingMethod() {
    return sowingMethod;
  }

  public void setSowingMethod(String sowingMethod) {
    this.sowingMethod = sowingMethod;
  }

  public CropDetails weedManagement(String weedManagement) {
    this.weedManagement = weedManagement;
    return this;
  }

  /**
   * Get weedManagement
   * @return weedManagement
  */
  
  @JsonProperty("weedManagement")
  public String getWeedManagement() {
    return weedManagement;
  }

  public void setWeedManagement(String weedManagement) {
    this.weedManagement = weedManagement;
  }

  public CropDetails nutritionalDetails(String nutritionalDetails) {
    this.nutritionalDetails = nutritionalDetails;
    return this;
  }

  /**
   * Get nutritionalDetails
   * @return nutritionalDetails
  */
  
  @JsonProperty("nutritionalDetails")
  public String getNutritionalDetails() {
    return nutritionalDetails;
  }

  public void setNutritionalDetails(String nutritionalDetails) {
    this.nutritionalDetails = nutritionalDetails;
  }

  public CropDetails published(Boolean published) {
    this.published = published;
    return this;
  }

  /**
   * Get published
   * @return published
  */
  
  @JsonProperty("published")
  public Boolean getPublished() {
    return published;
  }

  public void setPublished(Boolean published) {
    this.published = published;
  }

  public CropDetails versionId(Integer versionId) {
    this.versionId = versionId;
    return this;
  }

  /**
   * Get versionId
   * @return versionId
  */
  
  @JsonProperty("versionId")
  public Integer getVersionId() {
    return versionId;
  }

  public void setVersionId(Integer versionId) {
    this.versionId = versionId;
  }

  public CropDetails parentId(Integer parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * Get parentId
   * @return parentId
  */
  
  @JsonProperty("parent_id")
  public Integer getParentId() {
    return parentId;
  }

  public void setParentId(Integer parentId) {
    this.parentId = parentId;
  }

  public CropDetails isApproved(Short isApproved) {
    this.isApproved = isApproved;
    return this;
  }

  /**
   * Get isApproved
   * @return isApproved
  */
  
  @JsonProperty("isApproved")
  public Short getIsApproved() {
    return isApproved;
  }

  public void setIsApproved(Short isApproved) {
    this.isApproved = isApproved;
  }

  public CropDetails reviewerRemarks(String reviewerRemarks) {
    this.reviewerRemarks = reviewerRemarks;
    return this;
  }

  /**
   * Get reviewerRemarks
   * @return reviewerRemarks
  */
  
  @JsonProperty("reviewerRemarks")
  public String getReviewerRemarks() {
    return reviewerRemarks;
  }

  public void setReviewerRemarks(String reviewerRemarks) {
    this.reviewerRemarks = reviewerRemarks;
  }

  public CropDetails lastUpdatedAt(LocalDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

  /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
  */
  @Valid 
  @JsonProperty("lastUpdatedAt")
  public LocalDateTime getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(LocalDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }

  public CropDetails approvedAt(LocalDateTime approvedAt) {
    this.approvedAt = approvedAt;
    return this;
  }

  /**
   * Get approvedAt
   * @return approvedAt
  */
  @Valid 
  @JsonProperty("approvedAt")
  public LocalDateTime getApprovedAt() {
    return approvedAt;
  }

  public void setApprovedAt(LocalDateTime approvedAt) {
    this.approvedAt = approvedAt;
  }

  public CropDetails approvedBy(Integer approvedBy) {
    this.approvedBy = approvedBy;
    return this;
  }

  /**
   * Get approvedBy
   * @return approvedBy
  */
  
  @JsonProperty("approvedBy")
  public Integer getApprovedBy() {
    return approvedBy;
  }

  public void setApprovedBy(Integer approvedBy) {
    this.approvedBy = approvedBy;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CropDetails cropDetails = (CropDetails) o;
    return Objects.equals(this.id, cropDetails.id) &&
        Objects.equals(this.createdBy, cropDetails.createdBy) &&
        Objects.equals(this.createdAt, cropDetails.createdAt) &&
        Objects.equals(this.updatedBy, cropDetails.updatedBy) &&
        Objects.equals(this.updatedAt, cropDetails.updatedAt) &&
        Objects.equals(this.createdByToolId, cropDetails.createdByToolId) &&
        Objects.equals(this.updatedByToolId, cropDetails.updatedByToolId) &&
        Objects.equals(this.unspsc, cropDetails.unspsc) &&
        Objects.equals(this.eppocode, cropDetails.eppocode) &&
        Objects.equals(this.realmId, cropDetails.realmId) &&
        Objects.equals(this.cropId, cropDetails.cropId) &&
        Objects.equals(this.langId, cropDetails.langId) &&
        Objects.equals(this.authorId, cropDetails.authorId) &&
        Objects.equals(this.time, cropDetails.time) &&
        Objects.equals(this.name, cropDetails.name) &&
        Objects.equals(this.description, cropDetails.description) &&
        Objects.equals(this.diseases, cropDetails.diseases) &&
        Objects.equals(this.farmingRegions, cropDetails.farmingRegions) &&
        Objects.equals(this.fertilizers, cropDetails.fertilizers) &&
        Objects.equals(this.income, cropDetails.income) &&
        Objects.equals(this.inputCost, cropDetails.inputCost) &&
        Objects.equals(this.irrigationMethods, cropDetails.irrigationMethods) &&
        Objects.equals(this.machinesRequired, cropDetails.machinesRequired) &&
        Objects.equals(this.marketDemand, cropDetails.marketDemand) &&
        Objects.equals(this.revenue, cropDetails.revenue) &&
        Objects.equals(this.seedProcurement, cropDetails.seedProcurement) &&
        Objects.equals(this.seedQuantity, cropDetails.seedQuantity) &&
        Objects.equals(this.seedTypes, cropDetails.seedTypes) &&
        Objects.equals(this.soilPreparation, cropDetails.soilPreparation) &&
        Objects.equals(this.sowingMethod, cropDetails.sowingMethod) &&
        Objects.equals(this.weedManagement, cropDetails.weedManagement) &&
        Objects.equals(this.nutritionalDetails, cropDetails.nutritionalDetails) &&
        Objects.equals(this.published, cropDetails.published) &&
        Objects.equals(this.versionId, cropDetails.versionId) &&
        Objects.equals(this.parentId, cropDetails.parentId) &&
        Objects.equals(this.isApproved, cropDetails.isApproved) &&
        Objects.equals(this.reviewerRemarks, cropDetails.reviewerRemarks) &&
        Objects.equals(this.lastUpdatedAt, cropDetails.lastUpdatedAt) &&
        Objects.equals(this.approvedAt, cropDetails.approvedAt) &&
        Objects.equals(this.approvedBy, cropDetails.approvedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdBy, createdAt, updatedBy, updatedAt, createdByToolId, updatedByToolId, unspsc, eppocode, realmId, cropId, langId, authorId, time, name, description, diseases, farmingRegions, fertilizers, income, inputCost, irrigationMethods, machinesRequired, marketDemand, revenue, seedProcurement, seedQuantity, seedTypes, soilPreparation, sowingMethod, weedManagement, nutritionalDetails, published, versionId, parentId, isApproved, reviewerRemarks, lastUpdatedAt, approvedAt, approvedBy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CropDetails {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    createdByToolId: ").append(toIndentedString(createdByToolId)).append("\n");
    sb.append("    updatedByToolId: ").append(toIndentedString(updatedByToolId)).append("\n");
    sb.append("    unspsc: ").append(toIndentedString(unspsc)).append("\n");
    sb.append("    eppocode: ").append(toIndentedString(eppocode)).append("\n");
    sb.append("    realmId: ").append(toIndentedString(realmId)).append("\n");
    sb.append("    cropId: ").append(toIndentedString(cropId)).append("\n");
    sb.append("    langId: ").append(toIndentedString(langId)).append("\n");
    sb.append("    authorId: ").append(toIndentedString(authorId)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    diseases: ").append(toIndentedString(diseases)).append("\n");
    sb.append("    farmingRegions: ").append(toIndentedString(farmingRegions)).append("\n");
    sb.append("    fertilizers: ").append(toIndentedString(fertilizers)).append("\n");
    sb.append("    income: ").append(toIndentedString(income)).append("\n");
    sb.append("    inputCost: ").append(toIndentedString(inputCost)).append("\n");
    sb.append("    irrigationMethods: ").append(toIndentedString(irrigationMethods)).append("\n");
    sb.append("    machinesRequired: ").append(toIndentedString(machinesRequired)).append("\n");
    sb.append("    marketDemand: ").append(toIndentedString(marketDemand)).append("\n");
    sb.append("    revenue: ").append(toIndentedString(revenue)).append("\n");
    sb.append("    seedProcurement: ").append(toIndentedString(seedProcurement)).append("\n");
    sb.append("    seedQuantity: ").append(toIndentedString(seedQuantity)).append("\n");
    sb.append("    seedTypes: ").append(toIndentedString(seedTypes)).append("\n");
    sb.append("    soilPreparation: ").append(toIndentedString(soilPreparation)).append("\n");
    sb.append("    sowingMethod: ").append(toIndentedString(sowingMethod)).append("\n");
    sb.append("    weedManagement: ").append(toIndentedString(weedManagement)).append("\n");
    sb.append("    nutritionalDetails: ").append(toIndentedString(nutritionalDetails)).append("\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    isApproved: ").append(toIndentedString(isApproved)).append("\n");
    sb.append("    reviewerRemarks: ").append(toIndentedString(reviewerRemarks)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    approvedAt: ").append(toIndentedString(approvedAt)).append("\n");
    sb.append("    approvedBy: ").append(toIndentedString(approvedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

