package com.ninjacart.agri.advisory.refdata.models;

import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.time.OffsetDateTime;
import java.time.LocalDateTime;
import org.springframework.format.annotation.DateTimeFormat;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * AgriStackCrop
 */

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-02-21T18:37:48.349441+05:30[Asia/Kolkata]")
@jakarta.persistence.Entity
@jakarta.persistence.Table(
    name = "agristack_crop"
)

public class AgriStackCrop {

  @jakarta.persistence.Id
@jakarta.persistence.GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)

  private Integer id;

  private String realmId;

  private Integer createdBy;

  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private LocalDateTime createdAt;

  private Integer updatedBy;

  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private LocalDateTime updatedAt;

  private String createdByToolId;

  private String updatedByToolId;

  private Integer cropRegistryEntityIdentifierCropCode;

  private String cropName;

  private String cropType;

  private String scientificNameOfCrop;

  private String cropCategory;

  private String hindiNameOfCrop;

  private String vernacularNameOfCropInEnglishByAssam;

  private Boolean isDeleted = false;

  public AgriStackCrop id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Autogenerated primary key
   * @return id
  */
  
  @Schema(name = "id", description = "Autogenerated primary key", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("id")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public AgriStackCrop realmId(String realmId) {
    this.realmId = realmId;
    return this;
  }

  /**
   * Get realmId
   * @return realmId
  */
  
  @Schema(name = "realmId", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("realmId")
  public String getRealmId() {
    return realmId;
  }

  public void setRealmId(String realmId) {
    this.realmId = realmId;
  }

  public AgriStackCrop createdBy(Integer createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
  */
  
  @Schema(name = "createdBy", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("createdBy")
  public Integer getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(Integer createdBy) {
    this.createdBy = createdBy;
  }

  public AgriStackCrop createdAt(LocalDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
  */
  @Valid 
  @Schema(name = "createdAt", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("createdAt")
  public LocalDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(LocalDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public AgriStackCrop updatedBy(Integer updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

  /**
   * Get updatedBy
   * @return updatedBy
  */
  
  @Schema(name = "updatedBy", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("updatedBy")
  public Integer getUpdatedBy() {
    return updatedBy;
  }

  public void setUpdatedBy(Integer updatedBy) {
    this.updatedBy = updatedBy;
  }

  public AgriStackCrop updatedAt(LocalDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
  */
  @Valid 
  @Schema(name = "updatedAt", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("updatedAt")
  public LocalDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(LocalDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public AgriStackCrop createdByToolId(String createdByToolId) {
    this.createdByToolId = createdByToolId;
    return this;
  }

  /**
   * Get createdByToolId
   * @return createdByToolId
  */
  
  @Schema(name = "createdByToolId", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("createdByToolId")
  public String getCreatedByToolId() {
    return createdByToolId;
  }

  public void setCreatedByToolId(String createdByToolId) {
    this.createdByToolId = createdByToolId;
  }

  public AgriStackCrop updatedByToolId(String updatedByToolId) {
    this.updatedByToolId = updatedByToolId;
    return this;
  }

  /**
   * Get updatedByToolId
   * @return updatedByToolId
  */
  
  @Schema(name = "updatedByToolId", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("updatedByToolId")
  public String getUpdatedByToolId() {
    return updatedByToolId;
  }

  public void setUpdatedByToolId(String updatedByToolId) {
    this.updatedByToolId = updatedByToolId;
  }

  public AgriStackCrop cropRegistryEntityIdentifierCropCode(Integer cropRegistryEntityIdentifierCropCode) {
    this.cropRegistryEntityIdentifierCropCode = cropRegistryEntityIdentifierCropCode;
    return this;
  }

  /**
   * Get cropRegistryEntityIdentifierCropCode
   * @return cropRegistryEntityIdentifierCropCode
  */
  
  @Schema(name = "Crop Registry Entity Identifier (Crop code)", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("Crop Registry Entity Identifier (Crop code)")
  public Integer getCropRegistryEntityIdentifierCropCode() {
    return cropRegistryEntityIdentifierCropCode;
  }

  public void setCropRegistryEntityIdentifierCropCode(Integer cropRegistryEntityIdentifierCropCode) {
    this.cropRegistryEntityIdentifierCropCode = cropRegistryEntityIdentifierCropCode;
  }

  public AgriStackCrop cropName(String cropName) {
    this.cropName = cropName;
    return this;
  }

  /**
   * Get cropName
   * @return cropName
  */
  
  @Schema(name = "Crop name", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("Crop name")
  public String getCropName() {
    return cropName;
  }

  public void setCropName(String cropName) {
    this.cropName = cropName;
  }

  public AgriStackCrop cropType(String cropType) {
    this.cropType = cropType;
    return this;
  }

  /**
   * Get cropType
   * @return cropType
  */
  
  @Schema(name = "Crop Type", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("Crop Type")
  public String getCropType() {
    return cropType;
  }

  public void setCropType(String cropType) {
    this.cropType = cropType;
  }

  public AgriStackCrop scientificNameOfCrop(String scientificNameOfCrop) {
    this.scientificNameOfCrop = scientificNameOfCrop;
    return this;
  }

  /**
   * Get scientificNameOfCrop
   * @return scientificNameOfCrop
  */
  
  @Schema(name = "Scientific name of crop", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("Scientific name of crop")
  public String getScientificNameOfCrop() {
    return scientificNameOfCrop;
  }

  public void setScientificNameOfCrop(String scientificNameOfCrop) {
    this.scientificNameOfCrop = scientificNameOfCrop;
  }

  public AgriStackCrop cropCategory(String cropCategory) {
    this.cropCategory = cropCategory;
    return this;
  }

  /**
   * Get cropCategory
   * @return cropCategory
  */
  
  @Schema(name = "Crop Category", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("Crop Category")
  public String getCropCategory() {
    return cropCategory;
  }

  public void setCropCategory(String cropCategory) {
    this.cropCategory = cropCategory;
  }

  public AgriStackCrop hindiNameOfCrop(String hindiNameOfCrop) {
    this.hindiNameOfCrop = hindiNameOfCrop;
    return this;
  }

  /**
   * Get hindiNameOfCrop
   * @return hindiNameOfCrop
  */
  
  @Schema(name = "Hindi Name of Crop", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("Hindi Name of Crop")
  public String getHindiNameOfCrop() {
    return hindiNameOfCrop;
  }

  public void setHindiNameOfCrop(String hindiNameOfCrop) {
    this.hindiNameOfCrop = hindiNameOfCrop;
  }

  public AgriStackCrop vernacularNameOfCropInEnglishByAssam(String vernacularNameOfCropInEnglishByAssam) {
    this.vernacularNameOfCropInEnglishByAssam = vernacularNameOfCropInEnglishByAssam;
    return this;
  }

  /**
   * Get vernacularNameOfCropInEnglishByAssam
   * @return vernacularNameOfCropInEnglishByAssam
  */
  
  @Schema(name = "Vernacular name of crop in English by Assam", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("Vernacular name of crop in English by Assam")
  public String getVernacularNameOfCropInEnglishByAssam() {
    return vernacularNameOfCropInEnglishByAssam;
  }

  public void setVernacularNameOfCropInEnglishByAssam(String vernacularNameOfCropInEnglishByAssam) {
    this.vernacularNameOfCropInEnglishByAssam = vernacularNameOfCropInEnglishByAssam;
  }

  public AgriStackCrop isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Get isDeleted
   * @return isDeleted
  */
  
  @Schema(name = "is_deleted", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("is_deleted")
  public Boolean getIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AgriStackCrop agriStackCrop = (AgriStackCrop) o;
    return Objects.equals(this.id, agriStackCrop.id) &&
        Objects.equals(this.realmId, agriStackCrop.realmId) &&
        Objects.equals(this.createdBy, agriStackCrop.createdBy) &&
        Objects.equals(this.createdAt, agriStackCrop.createdAt) &&
        Objects.equals(this.updatedBy, agriStackCrop.updatedBy) &&
        Objects.equals(this.updatedAt, agriStackCrop.updatedAt) &&
        Objects.equals(this.createdByToolId, agriStackCrop.createdByToolId) &&
        Objects.equals(this.updatedByToolId, agriStackCrop.updatedByToolId) &&
        Objects.equals(this.cropRegistryEntityIdentifierCropCode, agriStackCrop.cropRegistryEntityIdentifierCropCode) &&
        Objects.equals(this.cropName, agriStackCrop.cropName) &&
        Objects.equals(this.cropType, agriStackCrop.cropType) &&
        Objects.equals(this.scientificNameOfCrop, agriStackCrop.scientificNameOfCrop) &&
        Objects.equals(this.cropCategory, agriStackCrop.cropCategory) &&
        Objects.equals(this.hindiNameOfCrop, agriStackCrop.hindiNameOfCrop) &&
        Objects.equals(this.vernacularNameOfCropInEnglishByAssam, agriStackCrop.vernacularNameOfCropInEnglishByAssam) &&
        Objects.equals(this.isDeleted, agriStackCrop.isDeleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, realmId, createdBy, createdAt, updatedBy, updatedAt, createdByToolId, updatedByToolId, cropRegistryEntityIdentifierCropCode, cropName, cropType, scientificNameOfCrop, cropCategory, hindiNameOfCrop, vernacularNameOfCropInEnglishByAssam, isDeleted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AgriStackCrop {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    realmId: ").append(toIndentedString(realmId)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    createdByToolId: ").append(toIndentedString(createdByToolId)).append("\n");
    sb.append("    updatedByToolId: ").append(toIndentedString(updatedByToolId)).append("\n");
    sb.append("    cropRegistryEntityIdentifierCropCode: ").append(toIndentedString(cropRegistryEntityIdentifierCropCode)).append("\n");
    sb.append("    cropName: ").append(toIndentedString(cropName)).append("\n");
    sb.append("    cropType: ").append(toIndentedString(cropType)).append("\n");
    sb.append("    scientificNameOfCrop: ").append(toIndentedString(scientificNameOfCrop)).append("\n");
    sb.append("    cropCategory: ").append(toIndentedString(cropCategory)).append("\n");
    sb.append("    hindiNameOfCrop: ").append(toIndentedString(hindiNameOfCrop)).append("\n");
    sb.append("    vernacularNameOfCropInEnglishByAssam: ").append(toIndentedString(vernacularNameOfCropInEnglishByAssam)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

