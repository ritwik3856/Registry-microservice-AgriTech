package com.ninjacart.agri.advisory.refdata.models;

import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.time.OffsetDateTime;
import java.time.LocalDateTime;
import org.springframework.format.annotation.DateTimeFormat;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * EppoCode
 */

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-02-21T18:37:48.349441+05:30[Asia/Kolkata]")
@jakarta.persistence.Entity
@jakarta.persistence.Table(
    name = "eppo_codes"
)

public class EppoCode {

  @jakarta.persistence.Id
@jakarta.persistence.GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)

  private Integer id;

  private String realmId;

  private Integer createdBy;

  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private LocalDateTime createdAt;

  private Integer updatedBy;

  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private LocalDateTime updatedAt;

  private String createdByToolId;

  private String updatedByToolId;

  private String identifier;

  private String datatype;

  private String code;

  private String language;

  private String langNo;

  private String country;

  private String fullName;

  private String authority;

  private String shortName;

  private Boolean isDeleted = false;

  public EppoCode id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Autogenerated primary key
   * @return id
  */
  
  @Schema(name = "id", description = "Autogenerated primary key", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("id")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public EppoCode realmId(String realmId) {
    this.realmId = realmId;
    return this;
  }

  /**
   * Get realmId
   * @return realmId
  */
  
  @Schema(name = "realmId", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("realmId")
  public String getRealmId() {
    return realmId;
  }

  public void setRealmId(String realmId) {
    this.realmId = realmId;
  }

  public EppoCode createdBy(Integer createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
  */
  
  @Schema(name = "createdBy", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("createdBy")
  public Integer getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(Integer createdBy) {
    this.createdBy = createdBy;
  }

  public EppoCode createdAt(LocalDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
  */
  @Valid 
  @Schema(name = "createdAt", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("createdAt")
  public LocalDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(LocalDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public EppoCode updatedBy(Integer updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

  /**
   * Get updatedBy
   * @return updatedBy
  */
  
  @Schema(name = "updatedBy", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("updatedBy")
  public Integer getUpdatedBy() {
    return updatedBy;
  }

  public void setUpdatedBy(Integer updatedBy) {
    this.updatedBy = updatedBy;
  }

  public EppoCode updatedAt(LocalDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
  */
  @Valid 
  @Schema(name = "updatedAt", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("updatedAt")
  public LocalDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(LocalDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public EppoCode createdByToolId(String createdByToolId) {
    this.createdByToolId = createdByToolId;
    return this;
  }

  /**
   * Get createdByToolId
   * @return createdByToolId
  */
  
  @Schema(name = "createdByToolId", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("createdByToolId")
  public String getCreatedByToolId() {
    return createdByToolId;
  }

  public void setCreatedByToolId(String createdByToolId) {
    this.createdByToolId = createdByToolId;
  }

  public EppoCode updatedByToolId(String updatedByToolId) {
    this.updatedByToolId = updatedByToolId;
    return this;
  }

  /**
   * Get updatedByToolId
   * @return updatedByToolId
  */
  
  @Schema(name = "updatedByToolId", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("updatedByToolId")
  public String getUpdatedByToolId() {
    return updatedByToolId;
  }

  public void setUpdatedByToolId(String updatedByToolId) {
    this.updatedByToolId = updatedByToolId;
  }

  public EppoCode identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

  /**
   * Get identifier
   * @return identifier
  */
  @Size(max = 10) 
  @Schema(name = "identifier", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("identifier")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public EppoCode datatype(String datatype) {
    this.datatype = datatype;
    return this;
  }

  /**
   * Get datatype
   * @return datatype
  */
  @Size(max = 3) 
  @Schema(name = "datatype", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("datatype")
  public String getDatatype() {
    return datatype;
  }

  public void setDatatype(String datatype) {
    this.datatype = datatype;
  }

  public EppoCode code(String code) {
    this.code = code;
    return this;
  }

  /**
   * Get code
   * @return code
  */
  @Size(max = 8) 
  @Schema(name = "code", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("code")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public EppoCode language(String language) {
    this.language = language;
    return this;
  }

  /**
   * Get language
   * @return language
  */
  @Size(max = 2) 
  @Schema(name = "language", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("language")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public EppoCode langNo(String langNo) {
    this.langNo = langNo;
    return this;
  }

  /**
   * Get langNo
   * @return langNo
  */
  @Size(max = 2) 
  @Schema(name = "langNo", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("langNo")
  public String getLangNo() {
    return langNo;
  }

  public void setLangNo(String langNo) {
    this.langNo = langNo;
  }

  public EppoCode country(String country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
  */
  @Size(max = 2) 
  @Schema(name = "country", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("country")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public EppoCode fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  /**
   * Get fullName
   * @return fullName
  */
  @Size(max = 60) 
  @Schema(name = "fullName", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("fullName")
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }

  public EppoCode authority(String authority) {
    this.authority = authority;
    return this;
  }

  /**
   * Get authority
   * @return authority
  */
  @Size(max = 60) 
  @Schema(name = "authority", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("authority")
  public String getAuthority() {
    return authority;
  }

  public void setAuthority(String authority) {
    this.authority = authority;
  }

  public EppoCode shortName(String shortName) {
    this.shortName = shortName;
    return this;
  }

  /**
   * Get shortName
   * @return shortName
  */
  @Size(max = 30) 
  @Schema(name = "shortName", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("shortName")
  public String getShortName() {
    return shortName;
  }

  public void setShortName(String shortName) {
    this.shortName = shortName;
  }

  public EppoCode isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Get isDeleted
   * @return isDeleted
  */
  
  @Schema(name = "is_deleted", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("is_deleted")
  public Boolean getIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EppoCode eppoCode = (EppoCode) o;
    return Objects.equals(this.id, eppoCode.id) &&
        Objects.equals(this.realmId, eppoCode.realmId) &&
        Objects.equals(this.createdBy, eppoCode.createdBy) &&
        Objects.equals(this.createdAt, eppoCode.createdAt) &&
        Objects.equals(this.updatedBy, eppoCode.updatedBy) &&
        Objects.equals(this.updatedAt, eppoCode.updatedAt) &&
        Objects.equals(this.createdByToolId, eppoCode.createdByToolId) &&
        Objects.equals(this.updatedByToolId, eppoCode.updatedByToolId) &&
        Objects.equals(this.identifier, eppoCode.identifier) &&
        Objects.equals(this.datatype, eppoCode.datatype) &&
        Objects.equals(this.code, eppoCode.code) &&
        Objects.equals(this.language, eppoCode.language) &&
        Objects.equals(this.langNo, eppoCode.langNo) &&
        Objects.equals(this.country, eppoCode.country) &&
        Objects.equals(this.fullName, eppoCode.fullName) &&
        Objects.equals(this.authority, eppoCode.authority) &&
        Objects.equals(this.shortName, eppoCode.shortName) &&
        Objects.equals(this.isDeleted, eppoCode.isDeleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, realmId, createdBy, createdAt, updatedBy, updatedAt, createdByToolId, updatedByToolId, identifier, datatype, code, language, langNo, country, fullName, authority, shortName, isDeleted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EppoCode {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    realmId: ").append(toIndentedString(realmId)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    createdByToolId: ").append(toIndentedString(createdByToolId)).append("\n");
    sb.append("    updatedByToolId: ").append(toIndentedString(updatedByToolId)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    datatype: ").append(toIndentedString(datatype)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    langNo: ").append(toIndentedString(langNo)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    authority: ").append(toIndentedString(authority)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

