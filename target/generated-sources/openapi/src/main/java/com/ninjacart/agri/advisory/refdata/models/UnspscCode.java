package com.ninjacart.agri.advisory.refdata.models;

import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.time.OffsetDateTime;
import java.time.LocalDateTime;
import org.springframework.format.annotation.DateTimeFormat;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * UnspscCode
 */

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-02-21T18:37:48.349441+05:30[Asia/Kolkata]")
@jakarta.persistence.Entity
@jakarta.persistence.Table(
    name = "unspsc_codes"
)

public class UnspscCode {

  @jakarta.persistence.Id
@jakarta.persistence.GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)

  private Integer id;

  private String realmId;

  private Integer createdBy;

  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private LocalDateTime createdAt;

  private Integer updatedBy;

  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private LocalDateTime updatedAt;

  private String createdByToolId;

  private String updatedByToolId;

  private Integer segment;

  private String segmentName;

  private Integer family;

  private String familyName;

  private Integer classCode;

  private String className;

  private Integer commodity;

  private String commodityName;

  private Boolean isDeleted = false;

  public UnspscCode id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Autogenerated primary key
   * @return id
  */
  
  @Schema(name = "id", description = "Autogenerated primary key", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("id")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public UnspscCode realmId(String realmId) {
    this.realmId = realmId;
    return this;
  }

  /**
   * Get realmId
   * @return realmId
  */
  
  @Schema(name = "realmId", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("realmId")
  public String getRealmId() {
    return realmId;
  }

  public void setRealmId(String realmId) {
    this.realmId = realmId;
  }

  public UnspscCode createdBy(Integer createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
  */
  
  @Schema(name = "createdBy", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("createdBy")
  public Integer getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(Integer createdBy) {
    this.createdBy = createdBy;
  }

  public UnspscCode createdAt(LocalDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
  */
  @Valid 
  @Schema(name = "createdAt", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("createdAt")
  public LocalDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(LocalDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public UnspscCode updatedBy(Integer updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

  /**
   * Get updatedBy
   * @return updatedBy
  */
  
  @Schema(name = "updatedBy", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("updatedBy")
  public Integer getUpdatedBy() {
    return updatedBy;
  }

  public void setUpdatedBy(Integer updatedBy) {
    this.updatedBy = updatedBy;
  }

  public UnspscCode updatedAt(LocalDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
  */
  @Valid 
  @Schema(name = "updatedAt", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("updatedAt")
  public LocalDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(LocalDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public UnspscCode createdByToolId(String createdByToolId) {
    this.createdByToolId = createdByToolId;
    return this;
  }

  /**
   * Get createdByToolId
   * @return createdByToolId
  */
  
  @Schema(name = "createdByToolId", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("createdByToolId")
  public String getCreatedByToolId() {
    return createdByToolId;
  }

  public void setCreatedByToolId(String createdByToolId) {
    this.createdByToolId = createdByToolId;
  }

  public UnspscCode updatedByToolId(String updatedByToolId) {
    this.updatedByToolId = updatedByToolId;
    return this;
  }

  /**
   * Get updatedByToolId
   * @return updatedByToolId
  */
  
  @Schema(name = "updatedByToolId", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("updatedByToolId")
  public String getUpdatedByToolId() {
    return updatedByToolId;
  }

  public void setUpdatedByToolId(String updatedByToolId) {
    this.updatedByToolId = updatedByToolId;
  }

  public UnspscCode segment(Integer segment) {
    this.segment = segment;
    return this;
  }

  /**
   * Get segment
   * @return segment
  */
  
  @Schema(name = "segment", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("segment")
  public Integer getSegment() {
    return segment;
  }

  public void setSegment(Integer segment) {
    this.segment = segment;
  }

  public UnspscCode segmentName(String segmentName) {
    this.segmentName = segmentName;
    return this;
  }

  /**
   * Get segmentName
   * @return segmentName
  */
  
  @Schema(name = "segmentName", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("segmentName")
  public String getSegmentName() {
    return segmentName;
  }

  public void setSegmentName(String segmentName) {
    this.segmentName = segmentName;
  }

  public UnspscCode family(Integer family) {
    this.family = family;
    return this;
  }

  /**
   * Get family
   * @return family
  */
  
  @Schema(name = "family", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("family")
  public Integer getFamily() {
    return family;
  }

  public void setFamily(Integer family) {
    this.family = family;
  }

  public UnspscCode familyName(String familyName) {
    this.familyName = familyName;
    return this;
  }

  /**
   * Get familyName
   * @return familyName
  */
  
  @Schema(name = "familyName", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("familyName")
  public String getFamilyName() {
    return familyName;
  }

  public void setFamilyName(String familyName) {
    this.familyName = familyName;
  }

  public UnspscCode classCode(Integer classCode) {
    this.classCode = classCode;
    return this;
  }

  /**
   * Get classCode
   * @return classCode
  */
  
  @Schema(name = "classCode", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("classCode")
  public Integer getClassCode() {
    return classCode;
  }

  public void setClassCode(Integer classCode) {
    this.classCode = classCode;
  }

  public UnspscCode className(String className) {
    this.className = className;
    return this;
  }

  /**
   * Get className
   * @return className
  */
  
  @Schema(name = "className", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("className")
  public String getClassName() {
    return className;
  }

  public void setClassName(String className) {
    this.className = className;
  }

  public UnspscCode commodity(Integer commodity) {
    this.commodity = commodity;
    return this;
  }

  /**
   * Get commodity
   * @return commodity
  */
  
  @Schema(name = "commodity", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("commodity")
  public Integer getCommodity() {
    return commodity;
  }

  public void setCommodity(Integer commodity) {
    this.commodity = commodity;
  }

  public UnspscCode commodityName(String commodityName) {
    this.commodityName = commodityName;
    return this;
  }

  /**
   * Get commodityName
   * @return commodityName
  */
  
  @Schema(name = "commodityName", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("commodityName")
  public String getCommodityName() {
    return commodityName;
  }

  public void setCommodityName(String commodityName) {
    this.commodityName = commodityName;
  }

  public UnspscCode isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Get isDeleted
   * @return isDeleted
  */
  
  @Schema(name = "is_deleted", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("is_deleted")
  public Boolean getIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UnspscCode unspscCode = (UnspscCode) o;
    return Objects.equals(this.id, unspscCode.id) &&
        Objects.equals(this.realmId, unspscCode.realmId) &&
        Objects.equals(this.createdBy, unspscCode.createdBy) &&
        Objects.equals(this.createdAt, unspscCode.createdAt) &&
        Objects.equals(this.updatedBy, unspscCode.updatedBy) &&
        Objects.equals(this.updatedAt, unspscCode.updatedAt) &&
        Objects.equals(this.createdByToolId, unspscCode.createdByToolId) &&
        Objects.equals(this.updatedByToolId, unspscCode.updatedByToolId) &&
        Objects.equals(this.segment, unspscCode.segment) &&
        Objects.equals(this.segmentName, unspscCode.segmentName) &&
        Objects.equals(this.family, unspscCode.family) &&
        Objects.equals(this.familyName, unspscCode.familyName) &&
        Objects.equals(this.classCode, unspscCode.classCode) &&
        Objects.equals(this.className, unspscCode.className) &&
        Objects.equals(this.commodity, unspscCode.commodity) &&
        Objects.equals(this.commodityName, unspscCode.commodityName) &&
        Objects.equals(this.isDeleted, unspscCode.isDeleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, realmId, createdBy, createdAt, updatedBy, updatedAt, createdByToolId, updatedByToolId, segment, segmentName, family, familyName, classCode, className, commodity, commodityName, isDeleted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UnspscCode {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    realmId: ").append(toIndentedString(realmId)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    createdByToolId: ").append(toIndentedString(createdByToolId)).append("\n");
    sb.append("    updatedByToolId: ").append(toIndentedString(updatedByToolId)).append("\n");
    sb.append("    segment: ").append(toIndentedString(segment)).append("\n");
    sb.append("    segmentName: ").append(toIndentedString(segmentName)).append("\n");
    sb.append("    family: ").append(toIndentedString(family)).append("\n");
    sb.append("    familyName: ").append(toIndentedString(familyName)).append("\n");
    sb.append("    classCode: ").append(toIndentedString(classCode)).append("\n");
    sb.append("    className: ").append(toIndentedString(className)).append("\n");
    sb.append("    commodity: ").append(toIndentedString(commodity)).append("\n");
    sb.append("    commodityName: ").append(toIndentedString(commodityName)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

