package com.ninjacart.agri.advisory.seed.models;

import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.time.OffsetDateTime;
import java.time.LocalDateTime;
import org.springframework.format.annotation.DateTimeFormat;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * Seed
 */

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-02-21T18:37:48.181268+05:30[Asia/Kolkata]")
@jakarta.persistence.Entity
@jakarta.persistence.Table(
    name = "seed"
  )
public class Seed {

  @jakarta.persistence.Id
@jakarta.persistence.GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
  private Integer id;

  private Integer createdBy;

  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private LocalDateTime createdAt;

  private Integer updatedBy;

  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private LocalDateTime updatedAt;

  private String createdByToolId;

  private String updatedByToolId;

  private String title;

  private Integer cropId;

  private String name;

  private String description;

  private Integer imageId;

  private String variety;

  private Integer varietyType;

  private String famousFor;

  private String sowingTime;

  private String sowingMethod;

  private String plantRowDistance;

  private String immunity;

  private String seedTreatmentMethods;

  private Integer cropDuration;

  private Integer firstHarvesting;

  private String produceShape;

  private String produceColor;

  private String produceSize;

  private String produceTaste;

  private String urlStr;

  private Integer perAcreRequirementMin;

  private Integer perAcreRequirementMax;

  private Integer perAcreCostMin;

  private Integer perAcreCostMax;

  private Boolean isDeleted = false;

  public Seed() {
    super();
  }

  /**
   * Constructor with only required parameters
   */
  public Seed(Integer cropId, String name) {
    this.cropId = cropId;
    this.name = name;
  }

  public Seed id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Autogenerated primary key
   * @return id
  */
  
  @Schema(name = "id", description = "Autogenerated primary key", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("id")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Seed createdBy(Integer createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
  */
  
  @Schema(name = "createdBy", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("createdBy")
  public Integer getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(Integer createdBy) {
    this.createdBy = createdBy;
  }

  public Seed createdAt(LocalDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
  */
  @Valid 
  @Schema(name = "createdAt", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("createdAt")
  public LocalDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(LocalDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Seed updatedBy(Integer updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

  /**
   * Get updatedBy
   * @return updatedBy
  */
  
  @Schema(name = "updatedBy", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("updatedBy")
  public Integer getUpdatedBy() {
    return updatedBy;
  }

  public void setUpdatedBy(Integer updatedBy) {
    this.updatedBy = updatedBy;
  }

  public Seed updatedAt(LocalDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
  */
  @Valid 
  @Schema(name = "updatedAt", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("updatedAt")
  public LocalDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(LocalDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Seed createdByToolId(String createdByToolId) {
    this.createdByToolId = createdByToolId;
    return this;
  }

  /**
   * Get createdByToolId
   * @return createdByToolId
  */
  
  @Schema(name = "createdByToolId", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("createdByToolId")
  public String getCreatedByToolId() {
    return createdByToolId;
  }

  public void setCreatedByToolId(String createdByToolId) {
    this.createdByToolId = createdByToolId;
  }

  public Seed updatedByToolId(String updatedByToolId) {
    this.updatedByToolId = updatedByToolId;
    return this;
  }

  /**
   * Get updatedByToolId
   * @return updatedByToolId
  */
  
  @Schema(name = "updatedByToolId", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("updatedByToolId")
  public String getUpdatedByToolId() {
    return updatedByToolId;
  }

  public void setUpdatedByToolId(String updatedByToolId) {
    this.updatedByToolId = updatedByToolId;
  }

  public Seed title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
  */
  
  @Schema(name = "title", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("title")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Seed cropId(Integer cropId) {
    this.cropId = cropId;
    return this;
  }

  /**
   * Get cropId
   * @return cropId
  */
  @NotNull 
  @Schema(name = "cropId", requiredMode = Schema.RequiredMode.REQUIRED)
  @JsonProperty("cropId")
  public Integer getCropId() {
    return cropId;
  }

  public void setCropId(Integer cropId) {
    this.cropId = cropId;
  }

  public Seed name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
  */
  @NotNull 
  @Schema(name = "name", requiredMode = Schema.RequiredMode.REQUIRED)
  @JsonProperty("name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Seed description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
  */
  
  @Schema(name = "description", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Seed imageId(Integer imageId) {
    this.imageId = imageId;
    return this;
  }

  /**
   * Get imageId
   * @return imageId
  */
  
  @Schema(name = "imageId", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("imageId")
  public Integer getImageId() {
    return imageId;
  }

  public void setImageId(Integer imageId) {
    this.imageId = imageId;
  }

  public Seed variety(String variety) {
    this.variety = variety;
    return this;
  }

  /**
   * Get variety
   * @return variety
  */
  
  @Schema(name = "variety", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("variety")
  public String getVariety() {
    return variety;
  }

  public void setVariety(String variety) {
    this.variety = variety;
  }

  public Seed varietyType(Integer varietyType) {
    this.varietyType = varietyType;
    return this;
  }

  /**
   * Get varietyType
   * @return varietyType
  */
  
  @Schema(name = "varietyType", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("varietyType")
  public Integer getVarietyType() {
    return varietyType;
  }

  public void setVarietyType(Integer varietyType) {
    this.varietyType = varietyType;
  }

  public Seed famousFor(String famousFor) {
    this.famousFor = famousFor;
    return this;
  }

  /**
   * Get famousFor
   * @return famousFor
  */
  
  @Schema(name = "famousFor", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("famousFor")
  public String getFamousFor() {
    return famousFor;
  }

  public void setFamousFor(String famousFor) {
    this.famousFor = famousFor;
  }

  public Seed sowingTime(String sowingTime) {
    this.sowingTime = sowingTime;
    return this;
  }

  /**
   * Get sowingTime
   * @return sowingTime
  */
  
  @Schema(name = "sowingTime", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("sowingTime")
  public String getSowingTime() {
    return sowingTime;
  }

  public void setSowingTime(String sowingTime) {
    this.sowingTime = sowingTime;
  }

  public Seed sowingMethod(String sowingMethod) {
    this.sowingMethod = sowingMethod;
    return this;
  }

  /**
   * Get sowingMethod
   * @return sowingMethod
  */
  
  @Schema(name = "sowingMethod", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("sowingMethod")
  public String getSowingMethod() {
    return sowingMethod;
  }

  public void setSowingMethod(String sowingMethod) {
    this.sowingMethod = sowingMethod;
  }

  public Seed plantRowDistance(String plantRowDistance) {
    this.plantRowDistance = plantRowDistance;
    return this;
  }

  /**
   * Get plantRowDistance
   * @return plantRowDistance
  */
  
  @Schema(name = "plantRowDistance", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("plantRowDistance")
  public String getPlantRowDistance() {
    return plantRowDistance;
  }

  public void setPlantRowDistance(String plantRowDistance) {
    this.plantRowDistance = plantRowDistance;
  }

  public Seed immunity(String immunity) {
    this.immunity = immunity;
    return this;
  }

  /**
   * Get immunity
   * @return immunity
  */
  
  @Schema(name = "immunity", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("immunity")
  public String getImmunity() {
    return immunity;
  }

  public void setImmunity(String immunity) {
    this.immunity = immunity;
  }

  public Seed seedTreatmentMethods(String seedTreatmentMethods) {
    this.seedTreatmentMethods = seedTreatmentMethods;
    return this;
  }

  /**
   * Get seedTreatmentMethods
   * @return seedTreatmentMethods
  */
  
  @Schema(name = "seedTreatmentMethods", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("seedTreatmentMethods")
  public String getSeedTreatmentMethods() {
    return seedTreatmentMethods;
  }

  public void setSeedTreatmentMethods(String seedTreatmentMethods) {
    this.seedTreatmentMethods = seedTreatmentMethods;
  }

  public Seed cropDuration(Integer cropDuration) {
    this.cropDuration = cropDuration;
    return this;
  }

  /**
   * Get cropDuration
   * @return cropDuration
  */
  
  @Schema(name = "cropDuration", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("cropDuration")
  public Integer getCropDuration() {
    return cropDuration;
  }

  public void setCropDuration(Integer cropDuration) {
    this.cropDuration = cropDuration;
  }

  public Seed firstHarvesting(Integer firstHarvesting) {
    this.firstHarvesting = firstHarvesting;
    return this;
  }

  /**
   * Get firstHarvesting
   * @return firstHarvesting
  */
  
  @Schema(name = "firstHarvesting", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("firstHarvesting")
  public Integer getFirstHarvesting() {
    return firstHarvesting;
  }

  public void setFirstHarvesting(Integer firstHarvesting) {
    this.firstHarvesting = firstHarvesting;
  }

  public Seed produceShape(String produceShape) {
    this.produceShape = produceShape;
    return this;
  }

  /**
   * Get produceShape
   * @return produceShape
  */
  
  @Schema(name = "produceShape", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("produceShape")
  public String getProduceShape() {
    return produceShape;
  }

  public void setProduceShape(String produceShape) {
    this.produceShape = produceShape;
  }

  public Seed produceColor(String produceColor) {
    this.produceColor = produceColor;
    return this;
  }

  /**
   * Get produceColor
   * @return produceColor
  */
  
  @Schema(name = "produceColor", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("produceColor")
  public String getProduceColor() {
    return produceColor;
  }

  public void setProduceColor(String produceColor) {
    this.produceColor = produceColor;
  }

  public Seed produceSize(String produceSize) {
    this.produceSize = produceSize;
    return this;
  }

  /**
   * Get produceSize
   * @return produceSize
  */
  
  @Schema(name = "produceSize", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("produceSize")
  public String getProduceSize() {
    return produceSize;
  }

  public void setProduceSize(String produceSize) {
    this.produceSize = produceSize;
  }

  public Seed produceTaste(String produceTaste) {
    this.produceTaste = produceTaste;
    return this;
  }

  /**
   * Get produceTaste
   * @return produceTaste
  */
  
  @Schema(name = "produceTaste", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("produceTaste")
  public String getProduceTaste() {
    return produceTaste;
  }

  public void setProduceTaste(String produceTaste) {
    this.produceTaste = produceTaste;
  }

  public Seed urlStr(String urlStr) {
    this.urlStr = urlStr;
    return this;
  }

  /**
   * Get urlStr
   * @return urlStr
  */
  
  @Schema(name = "urlStr", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("urlStr")
  public String getUrlStr() {
    return urlStr;
  }

  public void setUrlStr(String urlStr) {
    this.urlStr = urlStr;
  }

  public Seed perAcreRequirementMin(Integer perAcreRequirementMin) {
    this.perAcreRequirementMin = perAcreRequirementMin;
    return this;
  }

  /**
   * Get perAcreRequirementMin
   * @return perAcreRequirementMin
  */
  
  @Schema(name = "perAcreRequirementMin", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("perAcreRequirementMin")
  public Integer getPerAcreRequirementMin() {
    return perAcreRequirementMin;
  }

  public void setPerAcreRequirementMin(Integer perAcreRequirementMin) {
    this.perAcreRequirementMin = perAcreRequirementMin;
  }

  public Seed perAcreRequirementMax(Integer perAcreRequirementMax) {
    this.perAcreRequirementMax = perAcreRequirementMax;
    return this;
  }

  /**
   * Get perAcreRequirementMax
   * @return perAcreRequirementMax
  */
  
  @Schema(name = "perAcreRequirementMax", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("perAcreRequirementMax")
  public Integer getPerAcreRequirementMax() {
    return perAcreRequirementMax;
  }

  public void setPerAcreRequirementMax(Integer perAcreRequirementMax) {
    this.perAcreRequirementMax = perAcreRequirementMax;
  }

  public Seed perAcreCostMin(Integer perAcreCostMin) {
    this.perAcreCostMin = perAcreCostMin;
    return this;
  }

  /**
   * Get perAcreCostMin
   * @return perAcreCostMin
  */
  
  @Schema(name = "perAcreCostMin", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("perAcreCostMin")
  public Integer getPerAcreCostMin() {
    return perAcreCostMin;
  }

  public void setPerAcreCostMin(Integer perAcreCostMin) {
    this.perAcreCostMin = perAcreCostMin;
  }

  public Seed perAcreCostMax(Integer perAcreCostMax) {
    this.perAcreCostMax = perAcreCostMax;
    return this;
  }

  /**
   * Get perAcreCostMax
   * @return perAcreCostMax
  */
  
  @Schema(name = "perAcreCostMax", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("perAcreCostMax")
  public Integer getPerAcreCostMax() {
    return perAcreCostMax;
  }

  public void setPerAcreCostMax(Integer perAcreCostMax) {
    this.perAcreCostMax = perAcreCostMax;
  }

  public Seed isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Get isDeleted
   * @return isDeleted
  */
  
  @Schema(name = "is_deleted", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("is_deleted")
  public Boolean getIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Seed seed = (Seed) o;
    return Objects.equals(this.id, seed.id) &&
        Objects.equals(this.createdBy, seed.createdBy) &&
        Objects.equals(this.createdAt, seed.createdAt) &&
        Objects.equals(this.updatedBy, seed.updatedBy) &&
        Objects.equals(this.updatedAt, seed.updatedAt) &&
        Objects.equals(this.createdByToolId, seed.createdByToolId) &&
        Objects.equals(this.updatedByToolId, seed.updatedByToolId) &&
        Objects.equals(this.title, seed.title) &&
        Objects.equals(this.cropId, seed.cropId) &&
        Objects.equals(this.name, seed.name) &&
        Objects.equals(this.description, seed.description) &&
        Objects.equals(this.imageId, seed.imageId) &&
        Objects.equals(this.variety, seed.variety) &&
        Objects.equals(this.varietyType, seed.varietyType) &&
        Objects.equals(this.famousFor, seed.famousFor) &&
        Objects.equals(this.sowingTime, seed.sowingTime) &&
        Objects.equals(this.sowingMethod, seed.sowingMethod) &&
        Objects.equals(this.plantRowDistance, seed.plantRowDistance) &&
        Objects.equals(this.immunity, seed.immunity) &&
        Objects.equals(this.seedTreatmentMethods, seed.seedTreatmentMethods) &&
        Objects.equals(this.cropDuration, seed.cropDuration) &&
        Objects.equals(this.firstHarvesting, seed.firstHarvesting) &&
        Objects.equals(this.produceShape, seed.produceShape) &&
        Objects.equals(this.produceColor, seed.produceColor) &&
        Objects.equals(this.produceSize, seed.produceSize) &&
        Objects.equals(this.produceTaste, seed.produceTaste) &&
        Objects.equals(this.urlStr, seed.urlStr) &&
        Objects.equals(this.perAcreRequirementMin, seed.perAcreRequirementMin) &&
        Objects.equals(this.perAcreRequirementMax, seed.perAcreRequirementMax) &&
        Objects.equals(this.perAcreCostMin, seed.perAcreCostMin) &&
        Objects.equals(this.perAcreCostMax, seed.perAcreCostMax) &&
        Objects.equals(this.isDeleted, seed.isDeleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdBy, createdAt, updatedBy, updatedAt, createdByToolId, updatedByToolId, title, cropId, name, description, imageId, variety, varietyType, famousFor, sowingTime, sowingMethod, plantRowDistance, immunity, seedTreatmentMethods, cropDuration, firstHarvesting, produceShape, produceColor, produceSize, produceTaste, urlStr, perAcreRequirementMin, perAcreRequirementMax, perAcreCostMin, perAcreCostMax, isDeleted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Seed {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    createdByToolId: ").append(toIndentedString(createdByToolId)).append("\n");
    sb.append("    updatedByToolId: ").append(toIndentedString(updatedByToolId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    cropId: ").append(toIndentedString(cropId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    variety: ").append(toIndentedString(variety)).append("\n");
    sb.append("    varietyType: ").append(toIndentedString(varietyType)).append("\n");
    sb.append("    famousFor: ").append(toIndentedString(famousFor)).append("\n");
    sb.append("    sowingTime: ").append(toIndentedString(sowingTime)).append("\n");
    sb.append("    sowingMethod: ").append(toIndentedString(sowingMethod)).append("\n");
    sb.append("    plantRowDistance: ").append(toIndentedString(plantRowDistance)).append("\n");
    sb.append("    immunity: ").append(toIndentedString(immunity)).append("\n");
    sb.append("    seedTreatmentMethods: ").append(toIndentedString(seedTreatmentMethods)).append("\n");
    sb.append("    cropDuration: ").append(toIndentedString(cropDuration)).append("\n");
    sb.append("    firstHarvesting: ").append(toIndentedString(firstHarvesting)).append("\n");
    sb.append("    produceShape: ").append(toIndentedString(produceShape)).append("\n");
    sb.append("    produceColor: ").append(toIndentedString(produceColor)).append("\n");
    sb.append("    produceSize: ").append(toIndentedString(produceSize)).append("\n");
    sb.append("    produceTaste: ").append(toIndentedString(produceTaste)).append("\n");
    sb.append("    urlStr: ").append(toIndentedString(urlStr)).append("\n");
    sb.append("    perAcreRequirementMin: ").append(toIndentedString(perAcreRequirementMin)).append("\n");
    sb.append("    perAcreRequirementMax: ").append(toIndentedString(perAcreRequirementMax)).append("\n");
    sb.append("    perAcreCostMin: ").append(toIndentedString(perAcreCostMin)).append("\n");
    sb.append("    perAcreCostMax: ").append(toIndentedString(perAcreCostMax)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

