/*
 * This file is generated by jOOQ.
 */
package com.ninjacart.agri.advisory.crop.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Crop implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String alternateName;
    private String realmId;
    private Integer eppocode;
    private Integer unspsc;
    private LocalDateTime createdAt;
    private Integer createdBy;
    private String createdByToolId;
    private String cropIconImage;
    private String cropImage;
    private Integer cropTypeId;
    private String description;
    private String diseases;
    private String externalHashId;
    private String farmingRegions;
    private String fertilizers;
    private String hashId;
    private String hindiName;
    private String income;
    private String inputCost;
    private String irrigationMethods;
    private String machinesRequired;
    private String marketDemand;
    private String name;
    private String nutritionalDetails;
    private Short reapingEndTime;
    private Short reapingStartTime;
    private String revenue;
    private Short season;
    private String seedProcurement;
    private String seedQuantity;
    private String seedTypes;
    private Integer segmentId;
    private String soilPreparation;
    private Short sowingEndTime;
    private String sowingMethod;
    private String sowingReapingTime;
    private Short sowingStartTime;
    private LocalDateTime updatedAt;
    private Integer updatedBy;
    private String updatedByToolId;
    private String urlStr;
    private Integer versionId;
    private String weedManagement;
    private Boolean isDeleted;

    public Crop() {}

    public Crop(Crop value) {
        this.id = value.id;
        this.alternateName = value.alternateName;
        this.realmId = value.realmId;
        this.eppocode = value.eppocode;
        this.unspsc = value.unspsc;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.createdByToolId = value.createdByToolId;
        this.cropIconImage = value.cropIconImage;
        this.cropImage = value.cropImage;
        this.cropTypeId = value.cropTypeId;
        this.description = value.description;
        this.diseases = value.diseases;
        this.externalHashId = value.externalHashId;
        this.farmingRegions = value.farmingRegions;
        this.fertilizers = value.fertilizers;
        this.hashId = value.hashId;
        this.hindiName = value.hindiName;
        this.income = value.income;
        this.inputCost = value.inputCost;
        this.irrigationMethods = value.irrigationMethods;
        this.machinesRequired = value.machinesRequired;
        this.marketDemand = value.marketDemand;
        this.name = value.name;
        this.nutritionalDetails = value.nutritionalDetails;
        this.reapingEndTime = value.reapingEndTime;
        this.reapingStartTime = value.reapingStartTime;
        this.revenue = value.revenue;
        this.season = value.season;
        this.seedProcurement = value.seedProcurement;
        this.seedQuantity = value.seedQuantity;
        this.seedTypes = value.seedTypes;
        this.segmentId = value.segmentId;
        this.soilPreparation = value.soilPreparation;
        this.sowingEndTime = value.sowingEndTime;
        this.sowingMethod = value.sowingMethod;
        this.sowingReapingTime = value.sowingReapingTime;
        this.sowingStartTime = value.sowingStartTime;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
        this.updatedByToolId = value.updatedByToolId;
        this.urlStr = value.urlStr;
        this.versionId = value.versionId;
        this.weedManagement = value.weedManagement;
        this.isDeleted = value.isDeleted;
    }

    public Crop(
        Integer id,
        String alternateName,
        String realmId,
        Integer eppocode,
        Integer unspsc,
        LocalDateTime createdAt,
        Integer createdBy,
        String createdByToolId,
        String cropIconImage,
        String cropImage,
        Integer cropTypeId,
        String description,
        String diseases,
        String externalHashId,
        String farmingRegions,
        String fertilizers,
        String hashId,
        String hindiName,
        String income,
        String inputCost,
        String irrigationMethods,
        String machinesRequired,
        String marketDemand,
        String name,
        String nutritionalDetails,
        Short reapingEndTime,
        Short reapingStartTime,
        String revenue,
        Short season,
        String seedProcurement,
        String seedQuantity,
        String seedTypes,
        Integer segmentId,
        String soilPreparation,
        Short sowingEndTime,
        String sowingMethod,
        String sowingReapingTime,
        Short sowingStartTime,
        LocalDateTime updatedAt,
        Integer updatedBy,
        String updatedByToolId,
        String urlStr,
        Integer versionId,
        String weedManagement,
        Boolean isDeleted
    ) {
        this.id = id;
        this.alternateName = alternateName;
        this.realmId = realmId;
        this.eppocode = eppocode;
        this.unspsc = unspsc;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.createdByToolId = createdByToolId;
        this.cropIconImage = cropIconImage;
        this.cropImage = cropImage;
        this.cropTypeId = cropTypeId;
        this.description = description;
        this.diseases = diseases;
        this.externalHashId = externalHashId;
        this.farmingRegions = farmingRegions;
        this.fertilizers = fertilizers;
        this.hashId = hashId;
        this.hindiName = hindiName;
        this.income = income;
        this.inputCost = inputCost;
        this.irrigationMethods = irrigationMethods;
        this.machinesRequired = machinesRequired;
        this.marketDemand = marketDemand;
        this.name = name;
        this.nutritionalDetails = nutritionalDetails;
        this.reapingEndTime = reapingEndTime;
        this.reapingStartTime = reapingStartTime;
        this.revenue = revenue;
        this.season = season;
        this.seedProcurement = seedProcurement;
        this.seedQuantity = seedQuantity;
        this.seedTypes = seedTypes;
        this.segmentId = segmentId;
        this.soilPreparation = soilPreparation;
        this.sowingEndTime = sowingEndTime;
        this.sowingMethod = sowingMethod;
        this.sowingReapingTime = sowingReapingTime;
        this.sowingStartTime = sowingStartTime;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
        this.updatedByToolId = updatedByToolId;
        this.urlStr = urlStr;
        this.versionId = versionId;
        this.weedManagement = weedManagement;
        this.isDeleted = isDeleted;
    }

    /**
     * Getter for <code>public.crop.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.crop.id</code>.
     */
    public Crop setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.crop.alternate_name</code>.
     */
    public String getAlternateName() {
        return this.alternateName;
    }

    /**
     * Setter for <code>public.crop.alternate_name</code>.
     */
    public Crop setAlternateName(String alternateName) {
        this.alternateName = alternateName;
        return this;
    }

    /**
     * Getter for <code>public.crop.realm_id</code>.
     */
    public String getRealmId() {
        return this.realmId;
    }

    /**
     * Setter for <code>public.crop.realm_id</code>.
     */
    public Crop setRealmId(String realmId) {
        this.realmId = realmId;
        return this;
    }

    /**
     * Getter for <code>public.crop.eppocode</code>.
     */
    public Integer getEppocode() {
        return this.eppocode;
    }

    /**
     * Setter for <code>public.crop.eppocode</code>.
     */
    public Crop setEppocode(Integer eppocode) {
        this.eppocode = eppocode;
        return this;
    }

    /**
     * Getter for <code>public.crop.unspsc</code>.
     */
    public Integer getUnspsc() {
        return this.unspsc;
    }

    /**
     * Setter for <code>public.crop.unspsc</code>.
     */
    public Crop setUnspsc(Integer unspsc) {
        this.unspsc = unspsc;
        return this;
    }

    /**
     * Getter for <code>public.crop.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.crop.created_at</code>.
     */
    public Crop setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>public.crop.created_by</code>.
     */
    public Integer getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>public.crop.created_by</code>.
     */
    public Crop setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>public.crop.created_by_tool_id</code>.
     */
    public String getCreatedByToolId() {
        return this.createdByToolId;
    }

    /**
     * Setter for <code>public.crop.created_by_tool_id</code>.
     */
    public Crop setCreatedByToolId(String createdByToolId) {
        this.createdByToolId = createdByToolId;
        return this;
    }

    /**
     * Getter for <code>public.crop.crop_icon_image</code>.
     */
    public String getCropIconImage() {
        return this.cropIconImage;
    }

    /**
     * Setter for <code>public.crop.crop_icon_image</code>.
     */
    public Crop setCropIconImage(String cropIconImage) {
        this.cropIconImage = cropIconImage;
        return this;
    }

    /**
     * Getter for <code>public.crop.crop_image</code>.
     */
    public String getCropImage() {
        return this.cropImage;
    }

    /**
     * Setter for <code>public.crop.crop_image</code>.
     */
    public Crop setCropImage(String cropImage) {
        this.cropImage = cropImage;
        return this;
    }

    /**
     * Getter for <code>public.crop.crop_type_id</code>.
     */
    public Integer getCropTypeId() {
        return this.cropTypeId;
    }

    /**
     * Setter for <code>public.crop.crop_type_id</code>.
     */
    public Crop setCropTypeId(Integer cropTypeId) {
        this.cropTypeId = cropTypeId;
        return this;
    }

    /**
     * Getter for <code>public.crop.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>public.crop.description</code>.
     */
    public Crop setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Getter for <code>public.crop.diseases</code>.
     */
    public String getDiseases() {
        return this.diseases;
    }

    /**
     * Setter for <code>public.crop.diseases</code>.
     */
    public Crop setDiseases(String diseases) {
        this.diseases = diseases;
        return this;
    }

    /**
     * Getter for <code>public.crop.external_hash_id</code>.
     */
    public String getExternalHashId() {
        return this.externalHashId;
    }

    /**
     * Setter for <code>public.crop.external_hash_id</code>.
     */
    public Crop setExternalHashId(String externalHashId) {
        this.externalHashId = externalHashId;
        return this;
    }

    /**
     * Getter for <code>public.crop.farming_regions</code>.
     */
    public String getFarmingRegions() {
        return this.farmingRegions;
    }

    /**
     * Setter for <code>public.crop.farming_regions</code>.
     */
    public Crop setFarmingRegions(String farmingRegions) {
        this.farmingRegions = farmingRegions;
        return this;
    }

    /**
     * Getter for <code>public.crop.fertilizers</code>.
     */
    public String getFertilizers() {
        return this.fertilizers;
    }

    /**
     * Setter for <code>public.crop.fertilizers</code>.
     */
    public Crop setFertilizers(String fertilizers) {
        this.fertilizers = fertilizers;
        return this;
    }

    /**
     * Getter for <code>public.crop.hash_id</code>.
     */
    public String getHashId() {
        return this.hashId;
    }

    /**
     * Setter for <code>public.crop.hash_id</code>.
     */
    public Crop setHashId(String hashId) {
        this.hashId = hashId;
        return this;
    }

    /**
     * Getter for <code>public.crop.hindi_name</code>.
     */
    public String getHindiName() {
        return this.hindiName;
    }

    /**
     * Setter for <code>public.crop.hindi_name</code>.
     */
    public Crop setHindiName(String hindiName) {
        this.hindiName = hindiName;
        return this;
    }

    /**
     * Getter for <code>public.crop.income</code>.
     */
    public String getIncome() {
        return this.income;
    }

    /**
     * Setter for <code>public.crop.income</code>.
     */
    public Crop setIncome(String income) {
        this.income = income;
        return this;
    }

    /**
     * Getter for <code>public.crop.input_cost</code>.
     */
    public String getInputCost() {
        return this.inputCost;
    }

    /**
     * Setter for <code>public.crop.input_cost</code>.
     */
    public Crop setInputCost(String inputCost) {
        this.inputCost = inputCost;
        return this;
    }

    /**
     * Getter for <code>public.crop.irrigation_methods</code>.
     */
    public String getIrrigationMethods() {
        return this.irrigationMethods;
    }

    /**
     * Setter for <code>public.crop.irrigation_methods</code>.
     */
    public Crop setIrrigationMethods(String irrigationMethods) {
        this.irrigationMethods = irrigationMethods;
        return this;
    }

    /**
     * Getter for <code>public.crop.machines_required</code>.
     */
    public String getMachinesRequired() {
        return this.machinesRequired;
    }

    /**
     * Setter for <code>public.crop.machines_required</code>.
     */
    public Crop setMachinesRequired(String machinesRequired) {
        this.machinesRequired = machinesRequired;
        return this;
    }

    /**
     * Getter for <code>public.crop.market_demand</code>.
     */
    public String getMarketDemand() {
        return this.marketDemand;
    }

    /**
     * Setter for <code>public.crop.market_demand</code>.
     */
    public Crop setMarketDemand(String marketDemand) {
        this.marketDemand = marketDemand;
        return this;
    }

    /**
     * Getter for <code>public.crop.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.crop.name</code>.
     */
    public Crop setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>public.crop.nutritional_details</code>.
     */
    public String getNutritionalDetails() {
        return this.nutritionalDetails;
    }

    /**
     * Setter for <code>public.crop.nutritional_details</code>.
     */
    public Crop setNutritionalDetails(String nutritionalDetails) {
        this.nutritionalDetails = nutritionalDetails;
        return this;
    }

    /**
     * Getter for <code>public.crop.reaping_end_time</code>.
     */
    public Short getReapingEndTime() {
        return this.reapingEndTime;
    }

    /**
     * Setter for <code>public.crop.reaping_end_time</code>.
     */
    public Crop setReapingEndTime(Short reapingEndTime) {
        this.reapingEndTime = reapingEndTime;
        return this;
    }

    /**
     * Getter for <code>public.crop.reaping_start_time</code>.
     */
    public Short getReapingStartTime() {
        return this.reapingStartTime;
    }

    /**
     * Setter for <code>public.crop.reaping_start_time</code>.
     */
    public Crop setReapingStartTime(Short reapingStartTime) {
        this.reapingStartTime = reapingStartTime;
        return this;
    }

    /**
     * Getter for <code>public.crop.revenue</code>.
     */
    public String getRevenue() {
        return this.revenue;
    }

    /**
     * Setter for <code>public.crop.revenue</code>.
     */
    public Crop setRevenue(String revenue) {
        this.revenue = revenue;
        return this;
    }

    /**
     * Getter for <code>public.crop.season</code>.
     */
    public Short getSeason() {
        return this.season;
    }

    /**
     * Setter for <code>public.crop.season</code>.
     */
    public Crop setSeason(Short season) {
        this.season = season;
        return this;
    }

    /**
     * Getter for <code>public.crop.seed_procurement</code>.
     */
    public String getSeedProcurement() {
        return this.seedProcurement;
    }

    /**
     * Setter for <code>public.crop.seed_procurement</code>.
     */
    public Crop setSeedProcurement(String seedProcurement) {
        this.seedProcurement = seedProcurement;
        return this;
    }

    /**
     * Getter for <code>public.crop.seed_quantity</code>.
     */
    public String getSeedQuantity() {
        return this.seedQuantity;
    }

    /**
     * Setter for <code>public.crop.seed_quantity</code>.
     */
    public Crop setSeedQuantity(String seedQuantity) {
        this.seedQuantity = seedQuantity;
        return this;
    }

    /**
     * Getter for <code>public.crop.seed_types</code>.
     */
    public String getSeedTypes() {
        return this.seedTypes;
    }

    /**
     * Setter for <code>public.crop.seed_types</code>.
     */
    public Crop setSeedTypes(String seedTypes) {
        this.seedTypes = seedTypes;
        return this;
    }

    /**
     * Getter for <code>public.crop.segment_id</code>.
     */
    public Integer getSegmentId() {
        return this.segmentId;
    }

    /**
     * Setter for <code>public.crop.segment_id</code>.
     */
    public Crop setSegmentId(Integer segmentId) {
        this.segmentId = segmentId;
        return this;
    }

    /**
     * Getter for <code>public.crop.soil_preparation</code>.
     */
    public String getSoilPreparation() {
        return this.soilPreparation;
    }

    /**
     * Setter for <code>public.crop.soil_preparation</code>.
     */
    public Crop setSoilPreparation(String soilPreparation) {
        this.soilPreparation = soilPreparation;
        return this;
    }

    /**
     * Getter for <code>public.crop.sowing_end_time</code>.
     */
    public Short getSowingEndTime() {
        return this.sowingEndTime;
    }

    /**
     * Setter for <code>public.crop.sowing_end_time</code>.
     */
    public Crop setSowingEndTime(Short sowingEndTime) {
        this.sowingEndTime = sowingEndTime;
        return this;
    }

    /**
     * Getter for <code>public.crop.sowing_method</code>.
     */
    public String getSowingMethod() {
        return this.sowingMethod;
    }

    /**
     * Setter for <code>public.crop.sowing_method</code>.
     */
    public Crop setSowingMethod(String sowingMethod) {
        this.sowingMethod = sowingMethod;
        return this;
    }

    /**
     * Getter for <code>public.crop.sowing_reaping_time</code>.
     */
    public String getSowingReapingTime() {
        return this.sowingReapingTime;
    }

    /**
     * Setter for <code>public.crop.sowing_reaping_time</code>.
     */
    public Crop setSowingReapingTime(String sowingReapingTime) {
        this.sowingReapingTime = sowingReapingTime;
        return this;
    }

    /**
     * Getter for <code>public.crop.sowing_start_time</code>.
     */
    public Short getSowingStartTime() {
        return this.sowingStartTime;
    }

    /**
     * Setter for <code>public.crop.sowing_start_time</code>.
     */
    public Crop setSowingStartTime(Short sowingStartTime) {
        this.sowingStartTime = sowingStartTime;
        return this;
    }

    /**
     * Getter for <code>public.crop.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>public.crop.updated_at</code>.
     */
    public Crop setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>public.crop.updated_by</code>.
     */
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>public.crop.updated_by</code>.
     */
    public Crop setUpdatedBy(Integer updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    /**
     * Getter for <code>public.crop.updated_by_tool_id</code>.
     */
    public String getUpdatedByToolId() {
        return this.updatedByToolId;
    }

    /**
     * Setter for <code>public.crop.updated_by_tool_id</code>.
     */
    public Crop setUpdatedByToolId(String updatedByToolId) {
        this.updatedByToolId = updatedByToolId;
        return this;
    }

    /**
     * Getter for <code>public.crop.url_str</code>.
     */
    public String getUrlStr() {
        return this.urlStr;
    }

    /**
     * Setter for <code>public.crop.url_str</code>.
     */
    public Crop setUrlStr(String urlStr) {
        this.urlStr = urlStr;
        return this;
    }

    /**
     * Getter for <code>public.crop.version_id</code>.
     */
    public Integer getVersionId() {
        return this.versionId;
    }

    /**
     * Setter for <code>public.crop.version_id</code>.
     */
    public Crop setVersionId(Integer versionId) {
        this.versionId = versionId;
        return this;
    }

    /**
     * Getter for <code>public.crop.weed_management</code>.
     */
    public String getWeedManagement() {
        return this.weedManagement;
    }

    /**
     * Setter for <code>public.crop.weed_management</code>.
     */
    public Crop setWeedManagement(String weedManagement) {
        this.weedManagement = weedManagement;
        return this;
    }

    /**
     * Getter for <code>public.crop.is_deleted</code>.
     */
    public Boolean getIsDeleted() {
        return this.isDeleted;
    }

    /**
     * Setter for <code>public.crop.is_deleted</code>.
     */
    public Crop setIsDeleted(Boolean isDeleted) {
        this.isDeleted = isDeleted;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Crop other = (Crop) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.alternateName == null) {
            if (other.alternateName != null)
                return false;
        }
        else if (!this.alternateName.equals(other.alternateName))
            return false;
        if (this.realmId == null) {
            if (other.realmId != null)
                return false;
        }
        else if (!this.realmId.equals(other.realmId))
            return false;
        if (this.eppocode == null) {
            if (other.eppocode != null)
                return false;
        }
        else if (!this.eppocode.equals(other.eppocode))
            return false;
        if (this.unspsc == null) {
            if (other.unspsc != null)
                return false;
        }
        else if (!this.unspsc.equals(other.unspsc))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.createdByToolId == null) {
            if (other.createdByToolId != null)
                return false;
        }
        else if (!this.createdByToolId.equals(other.createdByToolId))
            return false;
        if (this.cropIconImage == null) {
            if (other.cropIconImage != null)
                return false;
        }
        else if (!this.cropIconImage.equals(other.cropIconImage))
            return false;
        if (this.cropImage == null) {
            if (other.cropImage != null)
                return false;
        }
        else if (!this.cropImage.equals(other.cropImage))
            return false;
        if (this.cropTypeId == null) {
            if (other.cropTypeId != null)
                return false;
        }
        else if (!this.cropTypeId.equals(other.cropTypeId))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.diseases == null) {
            if (other.diseases != null)
                return false;
        }
        else if (!this.diseases.equals(other.diseases))
            return false;
        if (this.externalHashId == null) {
            if (other.externalHashId != null)
                return false;
        }
        else if (!this.externalHashId.equals(other.externalHashId))
            return false;
        if (this.farmingRegions == null) {
            if (other.farmingRegions != null)
                return false;
        }
        else if (!this.farmingRegions.equals(other.farmingRegions))
            return false;
        if (this.fertilizers == null) {
            if (other.fertilizers != null)
                return false;
        }
        else if (!this.fertilizers.equals(other.fertilizers))
            return false;
        if (this.hashId == null) {
            if (other.hashId != null)
                return false;
        }
        else if (!this.hashId.equals(other.hashId))
            return false;
        if (this.hindiName == null) {
            if (other.hindiName != null)
                return false;
        }
        else if (!this.hindiName.equals(other.hindiName))
            return false;
        if (this.income == null) {
            if (other.income != null)
                return false;
        }
        else if (!this.income.equals(other.income))
            return false;
        if (this.inputCost == null) {
            if (other.inputCost != null)
                return false;
        }
        else if (!this.inputCost.equals(other.inputCost))
            return false;
        if (this.irrigationMethods == null) {
            if (other.irrigationMethods != null)
                return false;
        }
        else if (!this.irrigationMethods.equals(other.irrigationMethods))
            return false;
        if (this.machinesRequired == null) {
            if (other.machinesRequired != null)
                return false;
        }
        else if (!this.machinesRequired.equals(other.machinesRequired))
            return false;
        if (this.marketDemand == null) {
            if (other.marketDemand != null)
                return false;
        }
        else if (!this.marketDemand.equals(other.marketDemand))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.nutritionalDetails == null) {
            if (other.nutritionalDetails != null)
                return false;
        }
        else if (!this.nutritionalDetails.equals(other.nutritionalDetails))
            return false;
        if (this.reapingEndTime == null) {
            if (other.reapingEndTime != null)
                return false;
        }
        else if (!this.reapingEndTime.equals(other.reapingEndTime))
            return false;
        if (this.reapingStartTime == null) {
            if (other.reapingStartTime != null)
                return false;
        }
        else if (!this.reapingStartTime.equals(other.reapingStartTime))
            return false;
        if (this.revenue == null) {
            if (other.revenue != null)
                return false;
        }
        else if (!this.revenue.equals(other.revenue))
            return false;
        if (this.season == null) {
            if (other.season != null)
                return false;
        }
        else if (!this.season.equals(other.season))
            return false;
        if (this.seedProcurement == null) {
            if (other.seedProcurement != null)
                return false;
        }
        else if (!this.seedProcurement.equals(other.seedProcurement))
            return false;
        if (this.seedQuantity == null) {
            if (other.seedQuantity != null)
                return false;
        }
        else if (!this.seedQuantity.equals(other.seedQuantity))
            return false;
        if (this.seedTypes == null) {
            if (other.seedTypes != null)
                return false;
        }
        else if (!this.seedTypes.equals(other.seedTypes))
            return false;
        if (this.segmentId == null) {
            if (other.segmentId != null)
                return false;
        }
        else if (!this.segmentId.equals(other.segmentId))
            return false;
        if (this.soilPreparation == null) {
            if (other.soilPreparation != null)
                return false;
        }
        else if (!this.soilPreparation.equals(other.soilPreparation))
            return false;
        if (this.sowingEndTime == null) {
            if (other.sowingEndTime != null)
                return false;
        }
        else if (!this.sowingEndTime.equals(other.sowingEndTime))
            return false;
        if (this.sowingMethod == null) {
            if (other.sowingMethod != null)
                return false;
        }
        else if (!this.sowingMethod.equals(other.sowingMethod))
            return false;
        if (this.sowingReapingTime == null) {
            if (other.sowingReapingTime != null)
                return false;
        }
        else if (!this.sowingReapingTime.equals(other.sowingReapingTime))
            return false;
        if (this.sowingStartTime == null) {
            if (other.sowingStartTime != null)
                return false;
        }
        else if (!this.sowingStartTime.equals(other.sowingStartTime))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        if (this.updatedByToolId == null) {
            if (other.updatedByToolId != null)
                return false;
        }
        else if (!this.updatedByToolId.equals(other.updatedByToolId))
            return false;
        if (this.urlStr == null) {
            if (other.urlStr != null)
                return false;
        }
        else if (!this.urlStr.equals(other.urlStr))
            return false;
        if (this.versionId == null) {
            if (other.versionId != null)
                return false;
        }
        else if (!this.versionId.equals(other.versionId))
            return false;
        if (this.weedManagement == null) {
            if (other.weedManagement != null)
                return false;
        }
        else if (!this.weedManagement.equals(other.weedManagement))
            return false;
        if (this.isDeleted == null) {
            if (other.isDeleted != null)
                return false;
        }
        else if (!this.isDeleted.equals(other.isDeleted))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.alternateName == null) ? 0 : this.alternateName.hashCode());
        result = prime * result + ((this.realmId == null) ? 0 : this.realmId.hashCode());
        result = prime * result + ((this.eppocode == null) ? 0 : this.eppocode.hashCode());
        result = prime * result + ((this.unspsc == null) ? 0 : this.unspsc.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.createdByToolId == null) ? 0 : this.createdByToolId.hashCode());
        result = prime * result + ((this.cropIconImage == null) ? 0 : this.cropIconImage.hashCode());
        result = prime * result + ((this.cropImage == null) ? 0 : this.cropImage.hashCode());
        result = prime * result + ((this.cropTypeId == null) ? 0 : this.cropTypeId.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.diseases == null) ? 0 : this.diseases.hashCode());
        result = prime * result + ((this.externalHashId == null) ? 0 : this.externalHashId.hashCode());
        result = prime * result + ((this.farmingRegions == null) ? 0 : this.farmingRegions.hashCode());
        result = prime * result + ((this.fertilizers == null) ? 0 : this.fertilizers.hashCode());
        result = prime * result + ((this.hashId == null) ? 0 : this.hashId.hashCode());
        result = prime * result + ((this.hindiName == null) ? 0 : this.hindiName.hashCode());
        result = prime * result + ((this.income == null) ? 0 : this.income.hashCode());
        result = prime * result + ((this.inputCost == null) ? 0 : this.inputCost.hashCode());
        result = prime * result + ((this.irrigationMethods == null) ? 0 : this.irrigationMethods.hashCode());
        result = prime * result + ((this.machinesRequired == null) ? 0 : this.machinesRequired.hashCode());
        result = prime * result + ((this.marketDemand == null) ? 0 : this.marketDemand.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.nutritionalDetails == null) ? 0 : this.nutritionalDetails.hashCode());
        result = prime * result + ((this.reapingEndTime == null) ? 0 : this.reapingEndTime.hashCode());
        result = prime * result + ((this.reapingStartTime == null) ? 0 : this.reapingStartTime.hashCode());
        result = prime * result + ((this.revenue == null) ? 0 : this.revenue.hashCode());
        result = prime * result + ((this.season == null) ? 0 : this.season.hashCode());
        result = prime * result + ((this.seedProcurement == null) ? 0 : this.seedProcurement.hashCode());
        result = prime * result + ((this.seedQuantity == null) ? 0 : this.seedQuantity.hashCode());
        result = prime * result + ((this.seedTypes == null) ? 0 : this.seedTypes.hashCode());
        result = prime * result + ((this.segmentId == null) ? 0 : this.segmentId.hashCode());
        result = prime * result + ((this.soilPreparation == null) ? 0 : this.soilPreparation.hashCode());
        result = prime * result + ((this.sowingEndTime == null) ? 0 : this.sowingEndTime.hashCode());
        result = prime * result + ((this.sowingMethod == null) ? 0 : this.sowingMethod.hashCode());
        result = prime * result + ((this.sowingReapingTime == null) ? 0 : this.sowingReapingTime.hashCode());
        result = prime * result + ((this.sowingStartTime == null) ? 0 : this.sowingStartTime.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        result = prime * result + ((this.updatedByToolId == null) ? 0 : this.updatedByToolId.hashCode());
        result = prime * result + ((this.urlStr == null) ? 0 : this.urlStr.hashCode());
        result = prime * result + ((this.versionId == null) ? 0 : this.versionId.hashCode());
        result = prime * result + ((this.weedManagement == null) ? 0 : this.weedManagement.hashCode());
        result = prime * result + ((this.isDeleted == null) ? 0 : this.isDeleted.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Crop (");

        sb.append(id);
        sb.append(", ").append(alternateName);
        sb.append(", ").append(realmId);
        sb.append(", ").append(eppocode);
        sb.append(", ").append(unspsc);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(createdByToolId);
        sb.append(", ").append(cropIconImage);
        sb.append(", ").append(cropImage);
        sb.append(", ").append(cropTypeId);
        sb.append(", ").append(description);
        sb.append(", ").append(diseases);
        sb.append(", ").append(externalHashId);
        sb.append(", ").append(farmingRegions);
        sb.append(", ").append(fertilizers);
        sb.append(", ").append(hashId);
        sb.append(", ").append(hindiName);
        sb.append(", ").append(income);
        sb.append(", ").append(inputCost);
        sb.append(", ").append(irrigationMethods);
        sb.append(", ").append(machinesRequired);
        sb.append(", ").append(marketDemand);
        sb.append(", ").append(name);
        sb.append(", ").append(nutritionalDetails);
        sb.append(", ").append(reapingEndTime);
        sb.append(", ").append(reapingStartTime);
        sb.append(", ").append(revenue);
        sb.append(", ").append(season);
        sb.append(", ").append(seedProcurement);
        sb.append(", ").append(seedQuantity);
        sb.append(", ").append(seedTypes);
        sb.append(", ").append(segmentId);
        sb.append(", ").append(soilPreparation);
        sb.append(", ").append(sowingEndTime);
        sb.append(", ").append(sowingMethod);
        sb.append(", ").append(sowingReapingTime);
        sb.append(", ").append(sowingStartTime);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(updatedByToolId);
        sb.append(", ").append(urlStr);
        sb.append(", ").append(versionId);
        sb.append(", ").append(weedManagement);
        sb.append(", ").append(isDeleted);

        sb.append(")");
        return sb.toString();
    }
}
