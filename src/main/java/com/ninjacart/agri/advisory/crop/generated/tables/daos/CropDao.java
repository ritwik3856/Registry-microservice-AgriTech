/*
 * This file is generated by jOOQ.
 */
package com.ninjacart.agri.advisory.crop.generated.tables.daos;


import com.ninjacart.agri.advisory.crop.generated.AbstractSpringDAOImpl;
import com.ninjacart.agri.advisory.crop.generated.tables.Crop;
import com.ninjacart.agri.advisory.crop.generated.tables.records.CropRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class CropDao extends AbstractSpringDAOImpl<CropRecord, com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop, Integer> {

    /**
     * Create a new CropDao without any configuration
     */
    public CropDao() {
        super(Crop.CROP, com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop.class);
    }

    /**
     * Create a new CropDao with an attached configuration
     */
    @Autowired
    public CropDao(Configuration configuration) {
        super(Crop.CROP, com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop.class, configuration);
    }

    @Override
    public Integer getId(com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Crop.CROP.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchById(Integer... values) {
        return fetch(Crop.CROP.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop fetchOneById(Integer value) {
        return fetchOne(Crop.CROP.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchOptionalById(Integer value) {
        return fetchOptional(Crop.CROP.ID, value);
    }

    /**
     * Fetch records that have <code>alternate_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfAlternateName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.ALTERNATE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>alternate_name IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByAlternateName(String... values) {
        return fetch(Crop.CROP.ALTERNATE_NAME, values);
    }

    /**
     * Fetch records that have <code>realm_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfRealmId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.REALM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>realm_id IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByRealmId(String... values) {
        return fetch(Crop.CROP.REALM_ID, values);
    }

    /**
     * Fetch records that have <code>eppocode BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfEppocode(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Crop.CROP.EPPOCODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>eppocode IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByEppocode(Integer... values) {
        return fetch(Crop.CROP.EPPOCODE, values);
    }

    /**
     * Fetch records that have <code>unspsc BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfUnspsc(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Crop.CROP.UNSPSC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>unspsc IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByUnspsc(Integer... values) {
        return fetch(Crop.CROP.UNSPSC, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Crop.CROP.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Crop.CROP.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfCreatedBy(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Crop.CROP.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByCreatedBy(Integer... values) {
        return fetch(Crop.CROP.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created_by_tool_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfCreatedByToolId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.CREATED_BY_TOOL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by_tool_id IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByCreatedByToolId(String... values) {
        return fetch(Crop.CROP.CREATED_BY_TOOL_ID, values);
    }

    /**
     * Fetch records that have <code>crop_icon_image BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfCropIconImage(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.CROP_ICON_IMAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>crop_icon_image IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByCropIconImage(String... values) {
        return fetch(Crop.CROP.CROP_ICON_IMAGE, values);
    }

    /**
     * Fetch records that have <code>crop_image BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfCropImage(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.CROP_IMAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>crop_image IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByCropImage(String... values) {
        return fetch(Crop.CROP.CROP_IMAGE, values);
    }

    /**
     * Fetch records that have <code>crop_type_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfCropTypeId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Crop.CROP.CROP_TYPE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>crop_type_id IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByCropTypeId(Integer... values) {
        return fetch(Crop.CROP.CROP_TYPE_ID, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByDescription(String... values) {
        return fetch(Crop.CROP.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>diseases BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfDiseases(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.DISEASES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>diseases IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByDiseases(String... values) {
        return fetch(Crop.CROP.DISEASES, values);
    }

    /**
     * Fetch records that have <code>external_hash_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfExternalHashId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.EXTERNAL_HASH_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>external_hash_id IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByExternalHashId(String... values) {
        return fetch(Crop.CROP.EXTERNAL_HASH_ID, values);
    }

    /**
     * Fetch records that have <code>farming_regions BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfFarmingRegions(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.FARMING_REGIONS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>farming_regions IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByFarmingRegions(String... values) {
        return fetch(Crop.CROP.FARMING_REGIONS, values);
    }

    /**
     * Fetch records that have <code>fertilizers BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfFertilizers(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.FERTILIZERS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fertilizers IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByFertilizers(String... values) {
        return fetch(Crop.CROP.FERTILIZERS, values);
    }

    /**
     * Fetch records that have <code>hash_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfHashId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.HASH_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hash_id IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByHashId(String... values) {
        return fetch(Crop.CROP.HASH_ID, values);
    }

    /**
     * Fetch records that have <code>hindi_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfHindiName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.HINDI_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hindi_name IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByHindiName(String... values) {
        return fetch(Crop.CROP.HINDI_NAME, values);
    }

    /**
     * Fetch records that have <code>income BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfIncome(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.INCOME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>income IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByIncome(String... values) {
        return fetch(Crop.CROP.INCOME, values);
    }

    /**
     * Fetch records that have <code>input_cost BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfInputCost(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.INPUT_COST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>input_cost IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByInputCost(String... values) {
        return fetch(Crop.CROP.INPUT_COST, values);
    }

    /**
     * Fetch records that have <code>irrigation_methods BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfIrrigationMethods(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.IRRIGATION_METHODS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>irrigation_methods IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByIrrigationMethods(String... values) {
        return fetch(Crop.CROP.IRRIGATION_METHODS, values);
    }

    /**
     * Fetch records that have <code>machines_required BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfMachinesRequired(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.MACHINES_REQUIRED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>machines_required IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByMachinesRequired(String... values) {
        return fetch(Crop.CROP.MACHINES_REQUIRED, values);
    }

    /**
     * Fetch records that have <code>market_demand BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfMarketDemand(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.MARKET_DEMAND, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>market_demand IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByMarketDemand(String... values) {
        return fetch(Crop.CROP.MARKET_DEMAND, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByName(String... values) {
        return fetch(Crop.CROP.NAME, values);
    }

    /**
     * Fetch records that have <code>nutritional_details BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfNutritionalDetails(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.NUTRITIONAL_DETAILS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>nutritional_details IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByNutritionalDetails(String... values) {
        return fetch(Crop.CROP.NUTRITIONAL_DETAILS, values);
    }

    /**
     * Fetch records that have <code>reaping_end_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfReapingEndTime(Short lowerInclusive, Short upperInclusive) {
        return fetchRange(Crop.CROP.REAPING_END_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reaping_end_time IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByReapingEndTime(Short... values) {
        return fetch(Crop.CROP.REAPING_END_TIME, values);
    }

    /**
     * Fetch records that have <code>reaping_start_time BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfReapingStartTime(Short lowerInclusive, Short upperInclusive) {
        return fetchRange(Crop.CROP.REAPING_START_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reaping_start_time IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByReapingStartTime(Short... values) {
        return fetch(Crop.CROP.REAPING_START_TIME, values);
    }

    /**
     * Fetch records that have <code>revenue BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfRevenue(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.REVENUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>revenue IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByRevenue(String... values) {
        return fetch(Crop.CROP.REVENUE, values);
    }

    /**
     * Fetch records that have <code>season BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfSeason(Short lowerInclusive, Short upperInclusive) {
        return fetchRange(Crop.CROP.SEASON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>season IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchBySeason(Short... values) {
        return fetch(Crop.CROP.SEASON, values);
    }

    /**
     * Fetch records that have <code>seed_procurement BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfSeedProcurement(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.SEED_PROCUREMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>seed_procurement IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchBySeedProcurement(String... values) {
        return fetch(Crop.CROP.SEED_PROCUREMENT, values);
    }

    /**
     * Fetch records that have <code>seed_quantity BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfSeedQuantity(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.SEED_QUANTITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>seed_quantity IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchBySeedQuantity(String... values) {
        return fetch(Crop.CROP.SEED_QUANTITY, values);
    }

    /**
     * Fetch records that have <code>seed_types BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfSeedTypes(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.SEED_TYPES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>seed_types IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchBySeedTypes(String... values) {
        return fetch(Crop.CROP.SEED_TYPES, values);
    }

    /**
     * Fetch records that have <code>segment_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfSegmentId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Crop.CROP.SEGMENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>segment_id IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchBySegmentId(Integer... values) {
        return fetch(Crop.CROP.SEGMENT_ID, values);
    }

    /**
     * Fetch records that have <code>soil_preparation BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfSoilPreparation(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.SOIL_PREPARATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>soil_preparation IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchBySoilPreparation(String... values) {
        return fetch(Crop.CROP.SOIL_PREPARATION, values);
    }

    /**
     * Fetch records that have <code>sowing_end_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfSowingEndTime(Short lowerInclusive, Short upperInclusive) {
        return fetchRange(Crop.CROP.SOWING_END_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sowing_end_time IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchBySowingEndTime(Short... values) {
        return fetch(Crop.CROP.SOWING_END_TIME, values);
    }

    /**
     * Fetch records that have <code>sowing_method BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfSowingMethod(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.SOWING_METHOD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sowing_method IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchBySowingMethod(String... values) {
        return fetch(Crop.CROP.SOWING_METHOD, values);
    }

    /**
     * Fetch records that have <code>sowing_reaping_time BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfSowingReapingTime(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.SOWING_REAPING_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sowing_reaping_time IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchBySowingReapingTime(String... values) {
        return fetch(Crop.CROP.SOWING_REAPING_TIME, values);
    }

    /**
     * Fetch records that have <code>sowing_start_time BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfSowingStartTime(Short lowerInclusive, Short upperInclusive) {
        return fetchRange(Crop.CROP.SOWING_START_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sowing_start_time IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchBySowingStartTime(Short... values) {
        return fetch(Crop.CROP.SOWING_START_TIME, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Crop.CROP.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Crop.CROP.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfUpdatedBy(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Crop.CROP.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByUpdatedBy(Integer... values) {
        return fetch(Crop.CROP.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated_by_tool_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfUpdatedByToolId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.UPDATED_BY_TOOL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by_tool_id IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByUpdatedByToolId(String... values) {
        return fetch(Crop.CROP.UPDATED_BY_TOOL_ID, values);
    }

    /**
     * Fetch records that have <code>url_str BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfUrlStr(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.URL_STR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>url_str IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByUrlStr(String... values) {
        return fetch(Crop.CROP.URL_STR, values);
    }

    /**
     * Fetch records that have <code>version_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfVersionId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Crop.CROP.VERSION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>version_id IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByVersionId(Integer... values) {
        return fetch(Crop.CROP.VERSION_ID, values);
    }

    /**
     * Fetch records that have <code>weed_management BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfWeedManagement(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crop.CROP.WEED_MANAGEMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>weed_management IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByWeedManagement(String... values) {
        return fetch(Crop.CROP.WEED_MANAGEMENT, values);
    }

    /**
     * Fetch records that have <code>is_deleted BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchRangeOfIsDeleted(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Crop.CROP.IS_DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<com.ninjacart.agri.advisory.crop.generated.tables.pojos.Crop> fetchByIsDeleted(Boolean... values) {
        return fetch(Crop.CROP.IS_DELETED, values);
    }
}
